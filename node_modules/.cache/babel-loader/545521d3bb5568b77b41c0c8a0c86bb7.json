{"ast":null,"code":"import { WebPlugin } from '@capacitor/core';\nexport class GeolocationWeb extends WebPlugin {\n  async getCurrentPosition(options) {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(pos => {\n        resolve(pos);\n      }, err => {\n        reject(err);\n      }, Object.assign({\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 0\n      }, options));\n    });\n  }\n\n  async watchPosition(options, callback) {\n    const id = navigator.geolocation.watchPosition(pos => {\n      callback(pos);\n    }, err => {\n      callback(null, err);\n    }, Object.assign({\n      enableHighAccuracy: false,\n      timeout: 10000,\n      maximumAge: 0\n    }, options));\n    return `${id}`;\n  }\n\n  async clearWatch(options) {\n    window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n  }\n\n  async checkPermissions() {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser');\n    }\n\n    const permission = await window.navigator.permissions.query({\n      name: 'geolocation'\n    });\n    return {\n      location: permission.state,\n      coarseLocation: permission.state\n    };\n  }\n\n  async requestPermissions() {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n}\nconst Geolocation = new GeolocationWeb();\nexport { Geolocation };","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AAWA,OAAM,MAAOC,cAAP,SAA8BD,SAA9B,CAAuC;EACnB,MAAlBE,kBAAkB,CAACC,OAAD,EAA0B;IAChD,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;MACrCC,SAAS,CAACC,WAAV,CAAsBN,kBAAtB,CACEO,GAAG,IAAG;QACJJ,OAAO,CAACI,GAAD,CAAP;MACD,CAHH,EAIEC,GAAG,IAAG;QACJJ,MAAM,CAACI,GAAD,CAAN;MACD,CANH,EAMGC;QAECC,kBAAkB,EAAE,KAFrB;QAGCC,OAAO,EAAE,KAHV;QAICC,UAAU,EAAE;MAJb,GAKIX,OALJ,CANH;IAcD,CAfM,CAAP;EAgBD;;EAEkB,MAAbY,aAAa,CACjBZ,OADiB,EAEjBa,QAFiB,EAEc;IAE/B,MAAMC,EAAE,GAAGV,SAAS,CAACC,WAAV,CAAsBO,aAAtB,CACTN,GAAG,IAAG;MACJO,QAAQ,CAACP,GAAD,CAAR;IACD,CAHQ,EAITC,GAAG,IAAG;MACJM,QAAQ,CAAC,IAAD,EAAON,GAAP,CAAR;IACD,CANQ,EAMRC;MAECC,kBAAkB,EAAE,KAFrB;MAGCC,OAAO,EAAE,KAHV;MAICC,UAAU,EAAE;IAJb,GAKIX,OALJ,CANQ,CAAX;IAeA,OAAO,GAAGc,EAAE,EAAZ;EACD;;EAEe,MAAVC,UAAU,CAACf,OAAD,EAAwB;IACtCgB,MAAM,CAACZ,SAAP,CAAiBC,WAAjB,CAA6BU,UAA7B,CAAwCE,QAAQ,CAACjB,OAAO,CAACc,EAAT,EAAa,EAAb,CAAhD;EACD;;EAEqB,MAAhBI,gBAAgB;IACpB,IAAI,OAAOd,SAAP,KAAqB,WAArB,IAAoC,CAACA,SAAS,CAACe,WAAnD,EAAgE;MAC9D,MAAM,KAAKC,WAAL,CAAiB,+CAAjB,CAAN;IACD;;IAED,MAAMC,UAAU,GAAG,MAAML,MAAM,CAACZ,SAAP,CAAiBe,WAAjB,CAA6BG,KAA7B,CAAmC;MAC1DC,IAAI,EAAE;IADoD,CAAnC,CAAzB;IAGA,OAAO;MAAEC,QAAQ,EAAEH,UAAU,CAACI,KAAvB;MAA8BC,cAAc,EAAEL,UAAU,CAACI;IAAzD,CAAP;EACD;;EAEuB,MAAlBE,kBAAkB;IACtB,MAAM,KAAKC,aAAL,CAAmB,yBAAnB,CAAN;EACD;;AA3D0C;AA8D7C,MAAMC,WAAW,GAAG,IAAI/B,cAAJ,EAApB;AAEA,SAAS+B,WAAT","names":["WebPlugin","GeolocationWeb","getCurrentPosition","options","Promise","resolve","reject","navigator","geolocation","pos","err","Object","enableHighAccuracy","timeout","maximumAge","watchPosition","callback","id","clearWatch","window","parseInt","checkPermissions","permissions","unavailable","permission","query","name","location","state","coarseLocation","requestPermissions","unimplemented","Geolocation"],"sources":["/data/data/com.termux/files/home/Ionic/MyApp/node_modules/@capacitor/geolocation/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  CallbackID,\n  GeolocationPlugin,\n  PermissionStatus,\n  Position,\n  PositionOptions,\n  WatchPositionCallback,\n} from './definitions';\n\nexport class GeolocationWeb extends WebPlugin implements GeolocationPlugin {\n  async getCurrentPosition(options?: PositionOptions): Promise<Position> {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        pos => {\n          resolve(pos);\n        },\n        err => {\n          reject(err);\n        },\n        {\n          enableHighAccuracy: false,\n          timeout: 10000,\n          maximumAge: 0,\n          ...options,\n        },\n      );\n    });\n  }\n\n  async watchPosition(\n    options: PositionOptions,\n    callback: WatchPositionCallback,\n  ): Promise<CallbackID> {\n    const id = navigator.geolocation.watchPosition(\n      pos => {\n        callback(pos);\n      },\n      err => {\n        callback(null, err);\n      },\n      {\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 0,\n        ...options,\n      },\n    );\n\n    return `${id}`;\n  }\n\n  async clearWatch(options: { id: string }): Promise<void> {\n    window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n  }\n\n  async checkPermissions(): Promise<PermissionStatus> {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser');\n    }\n\n    const permission = await window.navigator.permissions.query({\n      name: 'geolocation',\n    });\n    return { location: permission.state, coarseLocation: permission.state };\n  }\n\n  async requestPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n}\n\nconst Geolocation = new GeolocationWeb();\n\nexport { Geolocation };\n"]},"metadata":{},"sourceType":"module"}