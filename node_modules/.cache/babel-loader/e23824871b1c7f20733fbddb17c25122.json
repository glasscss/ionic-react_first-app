{"ast":null,"code":"import { wrap } from './common';\n/**\n * @param pluginObj\n * @param methodName\n * @param config\n * @param args\n */\n\nexport function cordova(pluginObj, methodName, config, args) {\n  return wrap(pluginObj, methodName, config).apply(this, args);\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAT,QAAqB,UAArB;AAGA;;;;;;;AAMA,OAAM,SAAUC,OAAV,CAAkBC,SAAlB,EAAkCC,UAAlC,EAAsDC,MAAtD,EAA8EC,IAA9E,EAAsG;EAC1G,OAAOL,IAAI,CAACE,SAAD,EAAYC,UAAZ,EAAwBC,MAAxB,CAAJ,CAAoCE,KAApC,CAA0C,IAA1C,EAAgDD,IAAhD,CAAP;AACD","names":["wrap","cordova","pluginObj","methodName","config","args","apply"],"sources":["/data/data/com.termux/files/home/Ionic/ExploringApp/src/@awesome-cordova-plugins/core/decorators/cordova.ts"],"sourcesContent":["import { wrap } from './common';\nimport { CordovaOptions } from './interfaces';\n\n/**\n * @param pluginObj\n * @param methodName\n * @param config\n * @param args\n */\nexport function cordova(pluginObj: any, methodName: string, config: CordovaOptions, args: IArguments | any[]) {\n  return wrap(pluginObj, methodName, config).apply(this, args);\n}\n"]},"metadata":{},"sourceType":"module"}