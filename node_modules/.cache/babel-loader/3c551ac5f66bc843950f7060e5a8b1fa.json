{"ast":null,"code":"import _regeneratorRuntime from \"/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport function runWithTimeout(_x, _x2, _x3) {\n  return _runWithTimeout.apply(this, arguments);\n}\n\nfunction _runWithTimeout() {\n  _runWithTimeout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(promise, time, exception) {\n    var timer;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", Promise.race([promise, new Promise(function (_, reject) {\n              timer = setTimeout(function () {\n                return reject(exception);\n              }, time);\n            })]).finally(function () {\n              return clearTimeout(timer);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _runWithTimeout.apply(this, arguments);\n}","map":{"version":3,"mappings":";;AAAA,gBAAsBA,cAAtB;EAAA;AAAA;;;+EAAO,iBAA8BC,OAA9B,EAAyDC,IAAzD,EAAuEC,SAAvE;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,iCAEEC,OAAO,CAACC,IAAR,CAAa,CAClBJ,OADkB,EAElB,IAAIG,OAAJ,CAAY,UAACE,CAAD,EAAIC,MAAJ,EAAc;cACxBC,KAAK,GAAGC,UAAU,CAAC;gBAAA,OAAMF,MAAM,CAACJ,SAAD,CAAZ;cAAA,CAAD,EAA0BD,IAA1B,CAAlB;YACD,CAFD,CAFkB,CAAb,EAKJQ,OALI,CAKI;cAAA,OAAMC,YAAY,CAACH,KAAD,CAAlB;YAAA,CALJ,CAFF;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C","names":["runWithTimeout","promise","time","exception","Promise","race","_","reject","timer","setTimeout","finally","clearTimeout"],"sources":["/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@capacitor-community/bluetooth-le/src/timeout.ts"],"sourcesContent":["export async function runWithTimeout(promise: Promise<unknown>, time: number, exception: symbol): Promise<unknown> {\n  let timer: ReturnType<typeof setTimeout>;\n  return Promise.race([\n    promise,\n    new Promise((_, reject) => {\n      timer = setTimeout(() => reject(exception), time);\n    }),\n  ]).finally(() => clearTimeout(timer));\n}\n"]},"metadata":{},"sourceType":"module"}