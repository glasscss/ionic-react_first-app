{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\n\n\nvar safeSelector = function safeSelector(selector) {\n  var placeholders = [];\n  var index = 0;\n  var content; // Replaces attribute selectors with placeholders.\n  // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n\n  selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n    var replaceBy = \"__ph-\" + index + \"__\";\n    placeholders.push(keep);\n    index++;\n    return replaceBy;\n  }); // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n  // WS and \"+\" would otherwise be interpreted as selector separators.\n\n  content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n    var replaceBy = \"__ph-\" + index + \"__\";\n    placeholders.push(exp);\n    index++;\n    return pseudo + replaceBy;\n  });\n  var ss = {\n    content: content,\n    placeholders: placeholders\n  };\n  return ss;\n};\n\nvar restoreSafeSelector = function restoreSafeSelector(placeholders, content) {\n  return content.replace(/__ph-(\\d+)__/g, function (_, index) {\n    return placeholders[+index];\n  });\n};\n\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted'; // note: :host-context pre-processed to -shadowcsshostcontext.\n\nvar _polyfillHostContext = '-shadowcsscontext';\n\nvar _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\n\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\n\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\n\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\n\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\n\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n\nvar stripComments = function stripComments(input) {\n  return input.replace(_commentRe, '');\n};\n\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n\nvar extractCommentsWithHash = function extractCommentsWithHash(input) {\n  return input.match(_commentWithHashRe) || [];\n};\n\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\n\nvar processRules = function processRules(input, ruleCallback) {\n  var inputWithEscapedBlocks = escapeBlocks(input);\n  var nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n    var m = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n\n    var selector = m[2];\n    var content = '';\n    var suffix = m[4];\n    var contentPrefix = '';\n\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = '{';\n    }\n\n    var cssRule = {\n      selector: selector,\n      content: content\n    };\n    var rule = ruleCallback(cssRule);\n    return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n  });\n};\n\nvar escapeBlocks = function escapeBlocks(input) {\n  var inputParts = input.split(_curlyRe);\n  var resultParts = [];\n  var escapedBlocks = [];\n  var bracketCount = 0;\n  var currentBlockParts = [];\n\n  for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    var part = inputParts[partIndex];\n\n    if (part === CLOSE_CURLY) {\n      bracketCount--;\n    }\n\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n\n      resultParts.push(part);\n    }\n\n    if (part === OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n\n  var strEscapedBlocks = {\n    escapedString: resultParts.join(''),\n    blocks: escapedBlocks\n  };\n  return strEscapedBlocks;\n};\n\nvar insertPolyfillHostInCssText = function insertPolyfillHostInCssText(selector) {\n  selector = selector.replace(_colonHostContextRe, _polyfillHostContext).replace(_colonHostRe, _polyfillHost).replace(_colonSlottedRe, _polyfillSlotted);\n  return selector;\n};\n\nvar convertColonRule = function convertColonRule(cssText, regExp, partReplacer) {\n  // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n  return cssText.replace(regExp, function () {\n    var m = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n\n    if (m[2]) {\n      var parts = m[2].split(',');\n      var r = [];\n\n      for (var i = 0; i < parts.length; i++) {\n        var p = parts[i].trim();\n        if (!p) break;\n        r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n      }\n\n      return r.join(',');\n    } else {\n      return _polyfillHostNoCombinator + m[3];\n    }\n  });\n};\n\nvar colonHostPartReplacer = function colonHostPartReplacer(host, part, suffix) {\n  return host + part.replace(_polyfillHost, '') + suffix;\n};\n\nvar convertColonHost = function convertColonHost(cssText) {\n  return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\n\nvar colonHostContextPartReplacer = function colonHostContextPartReplacer(host, part, suffix) {\n  if (part.indexOf(_polyfillHost) > -1) {\n    return colonHostPartReplacer(host, part, suffix);\n  } else {\n    return host + part + suffix + ', ' + part + ' ' + host + suffix;\n  }\n};\n\nvar convertColonSlotted = function convertColonSlotted(cssText, slotScopeId) {\n  var slotClass = '.' + slotScopeId + ' > ';\n  var selectors = [];\n  cssText = cssText.replace(_cssColonSlottedRe, function () {\n    var m = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n\n    if (m[2]) {\n      var compound = m[2].trim();\n      var suffix = m[3];\n      var slottedSelector = slotClass + compound + suffix;\n      var prefixSelector = '';\n\n      for (var i = m[4] - 1; i >= 0; i--) {\n        var char = m[5][i];\n\n        if (char === '}' || char === ',') {\n          break;\n        }\n\n        prefixSelector = char + prefixSelector;\n      }\n\n      var orgSelector = prefixSelector + slottedSelector;\n      var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n\n      if (orgSelector.trim() !== addedSelector.trim()) {\n        var updatedSelector = addedSelector + \", \" + orgSelector;\n        selectors.push({\n          orgSelector: orgSelector,\n          updatedSelector: updatedSelector\n        });\n      }\n\n      return slottedSelector;\n    } else {\n      return _polyfillHostNoCombinator + m[3];\n    }\n  });\n  return {\n    selectors: selectors,\n    cssText: cssText\n  };\n};\n\nvar convertColonHostContext = function convertColonHostContext(cssText) {\n  return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\n\nvar convertShadowDOMSelectors = function convertShadowDOMSelectors(cssText) {\n  return _shadowDOMSelectorsRe.reduce(function (result, pattern) {\n    return result.replace(pattern, ' ');\n  }, cssText);\n};\n\nvar makeScopeMatcher = function makeScopeMatcher(scopeSelector) {\n  var lre = /\\[/g;\n  var rre = /\\]/g;\n  scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n  return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\n\nvar selectorNeedsScoping = function selectorNeedsScoping(selector, scopeSelector) {\n  var re = makeScopeMatcher(scopeSelector);\n  return !re.test(selector);\n};\n\nvar applySimpleSelectorScope = function applySimpleSelectorScope(selector, scopeSelector, hostSelector) {\n  // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n  _polyfillHostRe.lastIndex = 0;\n\n  if (_polyfillHostRe.test(selector)) {\n    var replaceBy_1 = \".\" + hostSelector;\n    return selector.replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n      return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n        return before + replaceBy_1 + colon + after;\n      });\n    }).replace(_polyfillHostRe, replaceBy_1 + ' ');\n  }\n\n  return scopeSelector + ' ' + selector;\n};\n\nvar applyStrictSelectorScope = function applyStrictSelectorScope(selector, scopeSelector, hostSelector) {\n  var isRe = /\\[is=([^\\]]*)\\]/g;\n  scopeSelector = scopeSelector.replace(isRe, function (_) {\n    var parts = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      parts[_i - 1] = arguments[_i];\n    }\n\n    return parts[0];\n  });\n  var className = '.' + scopeSelector;\n\n  var _scopeSelectorPart = function _scopeSelectorPart(p) {\n    var scopedP = p.trim();\n\n    if (!scopedP) {\n      return '';\n    }\n\n    if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n      scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n    } else {\n      // remove :host since it should be unnecessary\n      var t = p.replace(_polyfillHostRe, '');\n\n      if (t.length > 0) {\n        var matches = t.match(/([^:]*)(:*)(.*)/);\n\n        if (matches) {\n          scopedP = matches[1] + className + matches[2] + matches[3];\n        }\n      }\n    }\n\n    return scopedP;\n  };\n\n  var safeContent = safeSelector(selector);\n  selector = safeContent.content;\n  var scopedSelector = '';\n  var startIndex = 0;\n  var res;\n  var sep = /( |>|\\+|~(?!=))\\s*/g; // If a selector appears before :host it should not be shimmed as it\n  // matches on ancestor elements and not on elements in the host's shadow\n  // `:host-context(div)` is transformed to\n  // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n  // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n  // Historically `component-tag:host` was matching the component so we also want to preserve\n  // this behavior to avoid breaking legacy apps (it should not match).\n  // The behavior should be:\n  // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n  // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n  //   `:host-context(tag)`)\n\n  var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1; // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n\n  var shouldScope = !hasHost;\n\n  while ((res = sep.exec(selector)) !== null) {\n    var separator = res[1];\n    var part_1 = selector.slice(startIndex, res.index).trim();\n    shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n    var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n    scopedSelector += scopedPart + \" \" + separator + \" \";\n    startIndex = sep.lastIndex;\n  }\n\n  var part = selector.substring(startIndex);\n  shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n  scopedSelector += shouldScope ? _scopeSelectorPart(part) : part; // replace the placeholders with their original values\n\n  return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\n\nvar scopeSelector = function scopeSelector(selector, scopeSelectorText, hostSelector, slotSelector) {\n  return selector.split(',').map(function (shallowPart) {\n    if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n      return shallowPart.trim();\n    }\n\n    if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n      return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n    } else {\n      return shallowPart.trim();\n    }\n  }).join(', ');\n};\n\nvar scopeSelectors = function scopeSelectors(cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n  return processRules(cssText, function (rule) {\n    var selector = rule.selector;\n    var content = rule.content;\n\n    if (rule.selector[0] !== '@') {\n      selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n    } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n      content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n    }\n\n    var cssRule = {\n      selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n      content: content\n    };\n    return cssRule;\n  });\n};\n\nvar scopeCssText = function scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n  cssText = insertPolyfillHostInCssText(cssText);\n  cssText = convertColonHost(cssText);\n  cssText = convertColonHostContext(cssText);\n  var slotted = convertColonSlotted(cssText, slotScopeId);\n  cssText = slotted.cssText;\n  cssText = convertShadowDOMSelectors(cssText);\n\n  if (scopeId) {\n    cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n  }\n\n  cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n  cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n  return {\n    cssText: cssText.trim(),\n    slottedSelectors: slotted.selectors\n  };\n};\n\nvar scopeCss = function scopeCss(cssText, scopeId, commentOriginalSelector) {\n  var hostScopeId = scopeId + '-h';\n  var slotScopeId = scopeId + '-s';\n  var commentsWithHash = extractCommentsWithHash(cssText);\n  cssText = stripComments(cssText);\n  var orgSelectors = [];\n\n  if (commentOriginalSelector) {\n    var processCommentedSelector_1 = function processCommentedSelector_1(rule) {\n      var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n      var comment = \"/*!@\" + rule.selector + \"*/\";\n      orgSelectors.push({\n        placeholder: placeholder,\n        comment: comment\n      });\n      rule.selector = placeholder + rule.selector;\n      return rule;\n    };\n\n    cssText = processRules(cssText, function (rule) {\n      if (rule.selector[0] !== '@') {\n        return processCommentedSelector_1(rule);\n      } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n        rule.content = processRules(rule.content, processCommentedSelector_1);\n        return rule;\n      }\n\n      return rule;\n    });\n  }\n\n  var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n  cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n\n  if (commentOriginalSelector) {\n    orgSelectors.forEach(function (_a) {\n      var placeholder = _a.placeholder,\n          comment = _a.comment;\n      cssText = cssText.replace(placeholder, comment);\n    });\n  }\n\n  scoped.slottedSelectors.forEach(function (slottedSelector) {\n    cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n  });\n  return cssText;\n};\n\nexport { scopeCss };","map":{"version":3,"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","safeSelector","selector","placeholders","index","content","replace","_","keep","replaceBy","push","pseudo","exp","ss","restoreSafeSelector","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_selectorReSuffix","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","stripComments","input","_commentWithHashRe","extractCommentsWithHash","match","_ruleRe","_curlyRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","m","_i","suffix","contentPrefix","startsWith","blocks","substring","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","join","strEscapedBlocks","insertPolyfillHostInCssText","convertColonRule","cssText","regExp","partReplacer","parts","p","trim","colonHostPartReplacer","host","convertColonHost","colonHostContextPartReplacer","indexOf","convertColonSlotted","slotScopeId","slotClass","selectors","compound","slottedSelector","prefixSelector","char","orgSelector","addedSelector","trimRight","updatedSelector","convertColonHostContext","convertShadowDOMSelectors","reduce","result","pattern","makeScopeMatcher","scopeSelector","lre","rre","selectorNeedsScoping","re","test","applySimpleSelectorScope","hostSelector","lastIndex","replaceBy_1","before","colon","after","applyStrictSelectorScope","isRe","className","_scopeSelectorPart","scopedP","t","matches","safeContent","scopedSelector","startIndex","res","sep","hasHost","shouldScope","exec","separator","part_1","slice","scopedPart","scopeSelectorText","slotSelector","map","shallowPart","scopeSelectors","commentOriginalSelector","scopeCssText","scopeId","hostScopeId","slotted","slottedSelectors","scopeCss","commentsWithHash","orgSelectors","processCommentedSelector_1","placeholder","comment","scoped","forEach","_a"],"sources":["/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@ionic/pwa-elements/dist/esm-es5/shadow-css-d7d058ec-d59cb009.js"],"sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = function (selector) {\n    var placeholders = [];\n    var index = 0;\n    var content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    var ss = {\n        content: content,\n        placeholders: placeholders,\n    };\n    return ss;\n};\nvar restoreSafeSelector = function (placeholders, content) {\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) { return placeholders[+index]; });\n};\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g\n];\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function (input) {\n    return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function (input) {\n    return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function (input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var cssRule = {\n            selector: selector,\n            content: content\n        };\n        var rule = ruleCallback(cssRule);\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n};\nvar escapeBlocks = function (input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    var strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks\n    };\n    return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = function (selector) {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nvar convertColonRule = function (cssText, regExp, partReplacer) {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var parts = m[2].split(',');\n            var r = [];\n            for (var i = 0; i < parts.length; i++) {\n                var p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nvar colonHostPartReplacer = function (host, part, suffix) {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nvar convertColonHost = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = function (host, part, suffix) {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nvar convertColonSlotted = function (cssText, slotScopeId) {\n    var slotClass = '.' + slotScopeId + ' > ';\n    var selectors = [];\n    cssText = cssText.replace(_cssColonSlottedRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var compound = m[2].trim();\n            var suffix = m[3];\n            var slottedSelector = slotClass + compound + suffix;\n            var prefixSelector = '';\n            for (var i = m[4] - 1; i >= 0; i--) {\n                var char = m[5][i];\n                if (char === '}' || char === ',') {\n                    break;\n                }\n                prefixSelector = char + prefixSelector;\n            }\n            var orgSelector = prefixSelector + slottedSelector;\n            var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n            if (orgSelector.trim() !== addedSelector.trim()) {\n                var updatedSelector = addedSelector + \", \" + orgSelector;\n                selectors.push({\n                    orgSelector: orgSelector,\n                    updatedSelector: updatedSelector,\n                });\n            }\n            return slottedSelector;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n    return {\n        selectors: selectors,\n        cssText: cssText\n    };\n};\nvar convertColonHostContext = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = function (cssText) {\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n};\nvar makeScopeMatcher = function (scopeSelector) {\n    var lre = /\\[/g;\n    var rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nvar selectorNeedsScoping = function (selector, scopeSelector) {\n    var re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        var replaceBy_1 = \".\" + hostSelector;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n            return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                return before + replaceBy_1 + colon + after;\n            });\n        })\n            .replace(_polyfillHostRe, replaceBy_1 + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n    var isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\n        var parts = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parts[_i - 1] = arguments[_i];\n        }\n        return parts[0];\n    });\n    var className = '.' + scopeSelector;\n    var _scopeSelectorPart = function (p) {\n        var scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            var t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                var matches = t.match(/([^:]*)(:*)(.*)/);\n                if (matches) {\n                    scopedP = matches[1] + className + matches[2] + matches[3];\n                }\n            }\n        }\n        return scopedP;\n    };\n    var safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    var scopedSelector = '';\n    var startIndex = 0;\n    var res;\n    var sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    var shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        var separator = res[1];\n        var part_1 = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n        var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n        scopedSelector += scopedPart + \" \" + separator + \" \";\n        startIndex = sep.lastIndex;\n    }\n    var part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\n    return selector.split(',')\n        .map(function (shallowPart) {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n    return processRules(cssText, function (rule) {\n        var selector = rule.selector;\n        var content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n            rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        var cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content: content\n        };\n        return cssRule;\n    });\n};\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    var slotted = convertColonSlotted(cssText, slotScopeId);\n    cssText = slotted.cssText;\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return {\n        cssText: cssText.trim(),\n        slottedSelectors: slotted.selectors,\n    };\n};\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n    var hostScopeId = scopeId + '-h';\n    var slotScopeId = scopeId + '-s';\n    var commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    var orgSelectors = [];\n    if (commentOriginalSelector) {\n        var processCommentedSelector_1 = function (rule) {\n            var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n            var comment = \"/*!@\" + rule.selector + \"*/\";\n            orgSelectors.push({ placeholder: placeholder, comment: comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, function (rule) {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector_1(rule);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector_1);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(function (_a) {\n            var placeholder = _a.placeholder, comment = _a.comment;\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    scoped.slottedSelectors.forEach(function (slottedSelector) {\n        cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n    });\n    return cssText;\n};\nexport { scopeCss };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}