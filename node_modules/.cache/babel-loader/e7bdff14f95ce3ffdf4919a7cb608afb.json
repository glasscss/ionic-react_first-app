{"ast":null,"code":"/*! Capacitor: https://capacitorjs.com/ - MIT License */\nconst createCapacitorPlatforms = win => {\n  const defaultPlatformMap = new Map();\n  defaultPlatformMap.set('web', {\n    name: 'web'\n  });\n  const capPlatforms = win.CapacitorPlatforms || {\n    currentPlatform: {\n      name: 'web'\n    },\n    platforms: defaultPlatformMap\n  };\n\n  const addPlatform = (name, platform) => {\n    capPlatforms.platforms.set(name, platform);\n  };\n\n  const setPlatform = name => {\n    if (capPlatforms.platforms.has(name)) {\n      capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n    }\n  };\n\n  capPlatforms.addPlatform = addPlatform;\n  capPlatforms.setPlatform = setPlatform;\n  return capPlatforms;\n};\n\nconst initPlatforms = win => win.CapacitorPlatforms = createCapacitorPlatforms(win);\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\n\n\nconst CapacitorPlatforms = /*#__PURE__*/initPlatforms(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\n\nconst addPlatform = CapacitorPlatforms.addPlatform;\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\n\nconst setPlatform = CapacitorPlatforms.setPlatform;\n\nconst legacyRegisterWebPlugin = (cap, webPlugin) => {\n  var _a;\n\n  const config = webPlugin.config;\n  const Plugins = cap.Plugins;\n\n  if (!config || !config.name) {\n    // TODO: add link to upgrade guide\n    throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n  } // TODO: add link to upgrade guide\n\n\n  console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n\n  if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n    // Add the web plugin into the plugins registry if there already isn't\n    // an existing one. If it doesn't already exist, that means\n    // there's no existing native implementation for it.\n    // - OR -\n    // If we already have a plugin registered (meaning it was defined in the native layer),\n    // then we should only overwrite it if the corresponding web plugin activates on\n    // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n    Plugins[config.name] = webPlugin;\n  }\n};\n\nvar ExceptionCode;\n\n(function (ExceptionCode) {\n  /**\n   * API is not implemented.\n   *\n   * This usually means the API can't be used because it is not implemented for\n   * the current platform.\n   */\n  ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n  /**\n   * API is not available.\n   *\n   * This means the API can't be used right now because:\n   *   - it is currently missing a prerequisite, such as network connectivity\n   *   - it requires a particular platform or browser version\n   */\n\n  ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\n\nclass CapacitorException extends Error {\n  constructor(message, code) {\n    super(message);\n    this.message = message;\n    this.code = code;\n  }\n\n}\n\nconst getPlatformId = win => {\n  var _a, _b;\n\n  if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n    return 'android';\n  } else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n    return 'ios';\n  } else {\n    return 'web';\n  }\n};\n\nconst createCapacitor = win => {\n  var _a, _b, _c, _d, _e;\n\n  const capCustomPlatform = win.CapacitorCustomPlatform || null;\n  const cap = win.Capacitor || {};\n  const Plugins = cap.Plugins = cap.Plugins || {};\n  /**\n   * @deprecated Use `capCustomPlatform` instead, default functions like registerPlugin will function with the new object.\n   */\n\n  const capPlatforms = win.CapacitorPlatforms;\n\n  const defaultGetPlatform = () => {\n    return capCustomPlatform !== null ? capCustomPlatform.name : getPlatformId(win);\n  };\n\n  const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n\n  const defaultIsNativePlatform = () => getPlatform() !== 'web';\n\n  const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n\n  const defaultIsPluginAvailable = pluginName => {\n    const plugin = registeredPlugins.get(pluginName);\n\n    if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n      // JS implementation available for the current platform.\n      return true;\n    }\n\n    if (getPluginHeader(pluginName)) {\n      // Native implementation available.\n      return true;\n    }\n\n    return false;\n  };\n\n  const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) || defaultIsPluginAvailable;\n\n  const defaultGetPluginHeader = pluginName => {\n    var _a;\n\n    return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName);\n  };\n\n  const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n\n  const handleError = err => win.console.error(err);\n\n  const pluginMethodNoop = (_target, prop, pluginName) => {\n    return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n  };\n\n  const registeredPlugins = new Map();\n\n  const defaultRegisterPlugin = function (pluginName) {\n    let jsImplementations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const registeredPlugin = registeredPlugins.get(pluginName);\n\n    if (registeredPlugin) {\n      console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n      return registeredPlugin.proxy;\n    }\n\n    const platform = getPlatform();\n    const pluginHeader = getPluginHeader(pluginName);\n    let jsImplementation;\n\n    const loadPluginImplementation = async () => {\n      if (!jsImplementation && platform in jsImplementations) {\n        jsImplementation = typeof jsImplementations[platform] === 'function' ? jsImplementation = await jsImplementations[platform]() : jsImplementation = jsImplementations[platform];\n      } else if (capCustomPlatform !== null && !jsImplementation && 'web' in jsImplementations) {\n        jsImplementation = typeof jsImplementations['web'] === 'function' ? jsImplementation = await jsImplementations['web']() : jsImplementation = jsImplementations['web'];\n      }\n\n      return jsImplementation;\n    };\n\n    const createPluginMethod = (impl, prop) => {\n      var _a, _b;\n\n      if (pluginHeader) {\n        const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n\n        if (methodHeader) {\n          if (methodHeader.rtype === 'promise') {\n            return options => cap.nativePromise(pluginName, prop.toString(), options);\n          } else {\n            return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n          }\n        } else if (impl) {\n          return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n        }\n      } else if (impl) {\n        return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n      } else {\n        throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n      }\n    };\n\n    const createPluginMethodWrapper = prop => {\n      let remove;\n\n      const wrapper = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        const p = loadPluginImplementation().then(impl => {\n          const fn = createPluginMethod(impl, prop);\n\n          if (fn) {\n            const p = fn(...args);\n            remove = p === null || p === void 0 ? void 0 : p.remove;\n            return p;\n          } else {\n            throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n          }\n        });\n\n        if (prop === 'addListener') {\n          p.remove = async () => remove();\n        }\n\n        return p;\n      }; // Some flair âœ¨\n\n\n      wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n\n      Object.defineProperty(wrapper, 'name', {\n        value: prop,\n        writable: false,\n        configurable: false\n      });\n      return wrapper;\n    };\n\n    const addListener = createPluginMethodWrapper('addListener');\n    const removeListener = createPluginMethodWrapper('removeListener');\n\n    const addListenerNative = (eventName, callback) => {\n      const call = addListener({\n        eventName\n      }, callback);\n\n      const remove = async () => {\n        const callbackId = await call;\n        removeListener({\n          eventName,\n          callbackId\n        }, callback);\n      };\n\n      const p = new Promise(resolve => call.then(() => resolve({\n        remove\n      })));\n\n      p.remove = async () => {\n        console.warn(`Using addListener() without 'await' is deprecated.`);\n        await remove();\n      };\n\n      return p;\n    };\n\n    const proxy = new Proxy({}, {\n      get(_, prop) {\n        switch (prop) {\n          // https://github.com/facebook/react/issues/20030\n          case '$$typeof':\n            return undefined;\n\n          case 'toJSON':\n            return () => ({});\n\n          case 'addListener':\n            return pluginHeader ? addListenerNative : addListener;\n\n          case 'removeListener':\n            return removeListener;\n\n          default:\n            return createPluginMethodWrapper(prop);\n        }\n      }\n\n    });\n    Plugins[pluginName] = proxy;\n    registeredPlugins.set(pluginName, {\n      name: pluginName,\n      proxy,\n      platforms: new Set([...Object.keys(jsImplementations), ...(pluginHeader ? [platform] : [])])\n    });\n    return proxy;\n  };\n\n  const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin; // Add in convertFileSrc for web, it will already be available in native context\n\n  if (!cap.convertFileSrc) {\n    cap.convertFileSrc = filePath => filePath;\n  }\n\n  cap.getPlatform = getPlatform;\n  cap.handleError = handleError;\n  cap.isNativePlatform = isNativePlatform;\n  cap.isPluginAvailable = isPluginAvailable;\n  cap.pluginMethodNoop = pluginMethodNoop;\n  cap.registerPlugin = registerPlugin;\n  cap.Exception = CapacitorException;\n  cap.DEBUG = !!cap.DEBUG;\n  cap.isLoggingEnabled = !!cap.isLoggingEnabled; // Deprecated props\n\n  cap.platform = cap.getPlatform();\n  cap.isNative = cap.isNativePlatform();\n  return cap;\n};\n\nconst initCapacitorGlobal = win => win.Capacitor = createCapacitor(win);\n\nconst Capacitor = /*#__PURE__*/initCapacitorGlobal(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});\nconst registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\n\nconst Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\n\nconst registerWebPlugin = plugin => legacyRegisterWebPlugin(Capacitor, plugin);\n/**\n * Base class web plugins should extend.\n */\n\n\nclass WebPlugin {\n  constructor(config) {\n    this.listeners = {};\n    this.windowListeners = {};\n\n    if (config) {\n      // TODO: add link to upgrade guide\n      console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n      this.config = config;\n    }\n  }\n\n  addListener(eventName, listenerFunc) {\n    const listeners = this.listeners[eventName];\n\n    if (!listeners) {\n      this.listeners[eventName] = [];\n    }\n\n    this.listeners[eventName].push(listenerFunc); // If we haven't added a window listener for this event and it requires one,\n    // go ahead and add it\n\n    const windowListener = this.windowListeners[eventName];\n\n    if (windowListener && !windowListener.registered) {\n      this.addWindowListener(windowListener);\n    }\n\n    const remove = async () => this.removeListener(eventName, listenerFunc);\n\n    const p = Promise.resolve({\n      remove\n    });\n    Object.defineProperty(p, 'remove', {\n      value: async () => {\n        console.warn(`Using addListener() without 'await' is deprecated.`);\n        await remove();\n      }\n    });\n    return p;\n  }\n\n  async removeAllListeners() {\n    this.listeners = {};\n\n    for (const listener in this.windowListeners) {\n      this.removeWindowListener(this.windowListeners[listener]);\n    }\n\n    this.windowListeners = {};\n  }\n\n  notifyListeners(eventName, data) {\n    const listeners = this.listeners[eventName];\n\n    if (listeners) {\n      listeners.forEach(listener => listener(data));\n    }\n  }\n\n  hasListeners(eventName) {\n    return !!this.listeners[eventName].length;\n  }\n\n  registerWindowListener(windowEventName, pluginEventName) {\n    this.windowListeners[pluginEventName] = {\n      registered: false,\n      windowEventName,\n      pluginEventName,\n      handler: event => {\n        this.notifyListeners(pluginEventName, event);\n      }\n    };\n  }\n\n  unimplemented() {\n    let msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'not implemented';\n    return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n  }\n\n  unavailable() {\n    let msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'not available';\n    return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n  }\n\n  async removeListener(eventName, listenerFunc) {\n    const listeners = this.listeners[eventName];\n\n    if (!listeners) {\n      return;\n    }\n\n    const index = listeners.indexOf(listenerFunc);\n    this.listeners[eventName].splice(index, 1); // If there are no more listeners for this type of event,\n    // remove the window listener\n\n    if (!this.listeners[eventName].length) {\n      this.removeWindowListener(this.windowListeners[eventName]);\n    }\n  }\n\n  addWindowListener(handle) {\n    window.addEventListener(handle.windowEventName, handle.handler);\n    handle.registered = true;\n  }\n\n  removeWindowListener(handle) {\n    if (!handle) {\n      return;\n    }\n\n    window.removeEventListener(handle.windowEventName, handle.handler);\n    handle.registered = false;\n  }\n\n}\n\nconst WebView = /*#__PURE__*/registerPlugin('WebView');\nexport { Capacitor, CapacitorException, CapacitorPlatforms, ExceptionCode, Plugins, WebPlugin, WebView, addPlatform, registerPlugin, registerWebPlugin, setPlatform };","map":{"version":3,"mappings":"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","names":["createCapacitorPlatforms","win","defaultPlatformMap","Map","set","name","capPlatforms","CapacitorPlatforms","currentPlatform","platforms","addPlatform","platform","setPlatform","has","get","initPlatforms","globalThis","self","window","global","legacyRegisterWebPlugin","cap","webPlugin","_a","config","Plugins","Error","console","warn","includes","getPlatform","ExceptionCode","CapacitorException","constructor","message","code","getPlatformId","_b","androidBridge","webkit","messageHandlers","bridge","createCapacitor","_c","_d","_e","capCustomPlatform","CapacitorCustomPlatform","Capacitor","defaultGetPlatform","defaultIsNativePlatform","isNativePlatform","defaultIsPluginAvailable","pluginName","plugin","registeredPlugins","getPluginHeader","isPluginAvailable","defaultGetPluginHeader","PluginHeaders","find","h","handleError","err","error","pluginMethodNoop","_target","prop","Promise","reject","defaultRegisterPlugin","jsImplementations","registeredPlugin","proxy","pluginHeader","jsImplementation","loadPluginImplementation","createPluginMethod","impl","methodHeader","methods","m","rtype","options","nativePromise","toString","callback","nativeCallback","bind","Unimplemented","createPluginMethodWrapper","remove","wrapper","args","p","then","fn","Object","defineProperty","value","writable","configurable","addListener","removeListener","addListenerNative","eventName","call","callbackId","resolve","Proxy","_","undefined","Set","keys","registerPlugin","convertFileSrc","filePath","Exception","DEBUG","isLoggingEnabled","isNative","initCapacitorGlobal","registerWebPlugin","WebPlugin","listeners","windowListeners","listenerFunc","push","windowListener","registered","addWindowListener","removeAllListeners","listener","removeWindowListener","notifyListeners","data","forEach","hasListeners","length","registerWindowListener","windowEventName","pluginEventName","handler","event","unimplemented","msg","unavailable","Unavailable","index","indexOf","splice","handle","addEventListener","removeEventListener","WebView"],"sources":["/data/data/com.termux/files/home/Ionic/MyApp/node_modules/@capacitor/core/build/platforms.js","/data/data/com.termux/files/home/Ionic/MyApp/node_modules/@capacitor/core/build/legacy/legacy-web-plugin-merge.js","/data/data/com.termux/files/home/Ionic/MyApp/node_modules/@capacitor/core/build/util.js","/data/data/com.termux/files/home/Ionic/MyApp/node_modules/@capacitor/core/build/runtime.js","/data/data/com.termux/files/home/Ionic/MyApp/node_modules/@capacitor/core/build/global.js","/data/data/com.termux/files/home/Ionic/MyApp/node_modules/@capacitor/core/build/web-plugin.js","/data/data/com.termux/files/home/Ionic/MyApp/node_modules/@capacitor/core/build/core-plugins.js"],"sourcesContent":["const createCapacitorPlatforms = (win) => {\n    const defaultPlatformMap = new Map();\n    defaultPlatformMap.set('web', { name: 'web' });\n    const capPlatforms = win.CapacitorPlatforms || {\n        currentPlatform: { name: 'web' },\n        platforms: defaultPlatformMap,\n    };\n    const addPlatform = (name, platform) => {\n        capPlatforms.platforms.set(name, platform);\n    };\n    const setPlatform = (name) => {\n        if (capPlatforms.platforms.has(name)) {\n            capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n        }\n    };\n    capPlatforms.addPlatform = addPlatform;\n    capPlatforms.setPlatform = setPlatform;\n    return capPlatforms;\n};\nconst initPlatforms = (win) => (win.CapacitorPlatforms = createCapacitorPlatforms(win));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nexport const CapacitorPlatforms = /*#__PURE__*/ initPlatforms((typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {}));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nexport const addPlatform = CapacitorPlatforms.addPlatform;\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nexport const setPlatform = CapacitorPlatforms.setPlatform;\n//# sourceMappingURL=platforms.js.map","export const legacyRegisterWebPlugin = (cap, webPlugin) => {\n    var _a;\n    const config = webPlugin.config;\n    const Plugins = cap.Plugins;\n    if (!config || !config.name) {\n        // TODO: add link to upgrade guide\n        throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n    }\n    // TODO: add link to upgrade guide\n    console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n    if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n        // Add the web plugin into the plugins registry if there already isn't\n        // an existing one. If it doesn't already exist, that means\n        // there's no existing native implementation for it.\n        // - OR -\n        // If we already have a plugin registered (meaning it was defined in the native layer),\n        // then we should only overwrite it if the corresponding web plugin activates on\n        // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n        Plugins[config.name] = webPlugin;\n    }\n};\n//# sourceMappingURL=legacy-web-plugin-merge.js.map","export var ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nexport class CapacitorException extends Error {\n    constructor(message, code) {\n        super(message);\n        this.message = message;\n        this.code = code;\n    }\n}\nexport const getPlatformId = (win) => {\n    var _a, _b;\n    if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n        return 'android';\n    }\n    else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    else {\n        return 'web';\n    }\n};\n//# sourceMappingURL=util.js.map","import { CapacitorException, getPlatformId, ExceptionCode } from './util';\nexport const createCapacitor = (win) => {\n    var _a, _b, _c, _d, _e;\n    const capCustomPlatform = win.CapacitorCustomPlatform || null;\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    /**\n     * @deprecated Use `capCustomPlatform` instead, default functions like registerPlugin will function with the new object.\n     */\n    const capPlatforms = win.CapacitorPlatforms;\n    const defaultGetPlatform = () => {\n        return capCustomPlatform !== null\n            ? capCustomPlatform.name\n            : getPlatformId(win);\n    };\n    const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n    const defaultIsNativePlatform = () => getPlatform() !== 'web';\n    const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n    const defaultIsPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) ||\n        defaultIsPluginAvailable;\n    const defaultGetPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName); };\n    const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n    const handleError = (err) => win.console.error(err);\n    const pluginMethodNoop = (_target, prop, pluginName) => {\n        return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n    };\n    const registeredPlugins = new Map();\n    const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            else if (capCustomPlatform !== null &&\n                !jsImplementation &&\n                'web' in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations['web'] === 'function'\n                        ? (jsImplementation = await jsImplementations['web']())\n                        : (jsImplementation = jsImplementations['web']);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a, _b;\n            if (pluginHeader) {\n                const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n                else if (impl) {\n                    return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n                }\n            }\n            else if (impl) {\n                return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then(impl => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair âœ¨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise(resolve => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'toJSON':\n                        return () => ({});\n                    case 'addListener':\n                        return pluginHeader ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([\n                ...Object.keys(jsImplementations),\n                ...(pluginHeader ? [platform] : []),\n            ]),\n        });\n        return proxy;\n    };\n    const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n    // Add in convertFileSrc for web, it will already be available in native context\n    if (!cap.convertFileSrc) {\n        cap.convertFileSrc = filePath => filePath;\n    }\n    cap.getPlatform = getPlatform;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.pluginMethodNoop = pluginMethodNoop;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n    // Deprecated props\n    cap.platform = cap.getPlatform();\n    cap.isNative = cap.isNativePlatform();\n    return cap;\n};\nexport const initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n//# sourceMappingURL=runtime.js.map","import { legacyRegisterWebPlugin } from './legacy/legacy-web-plugin-merge';\nimport { initCapacitorGlobal } from './runtime';\nexport const Capacitor = /*#__PURE__*/ initCapacitorGlobal(typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {});\nexport const registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nexport const Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nexport const registerWebPlugin = (plugin) => legacyRegisterWebPlugin(Capacitor, plugin);\n//# sourceMappingURL=global.js.map","import { Capacitor } from './global';\nimport { ExceptionCode } from './util';\n/**\n * Base class web plugins should extend.\n */\nexport class WebPlugin {\n    constructor(config) {\n        this.listeners = {};\n        this.windowListeners = {};\n        if (config) {\n            // TODO: add link to upgrade guide\n            console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n            this.config = config;\n        }\n    }\n    addListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        Object.defineProperty(p, 'remove', {\n            value: async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            },\n        });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data) {\n        const listeners = this.listeners[eventName];\n        if (listeners) {\n            listeners.forEach(listener => listener(data));\n        }\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: event => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n}\n//# sourceMappingURL=web-plugin.js.map","import { registerPlugin } from './global';\nexport const WebView = /*#__PURE__*/ registerPlugin('WebView');\n//# sourceMappingURL=core-plugins.js.map"]},"metadata":{},"sourceType":"module"}