{"ast":null,"code":"export async function runWithTimeout(promise, time, exception) {\n  let timer;\n  return Promise.race([promise, new Promise((_, reject) => {\n    timer = setTimeout(() => reject(exception), time);\n  })]).finally(() => clearTimeout(timer));\n}","map":{"version":3,"mappings":"AAAA,OAAO,eAAeA,cAAf,CAA8BC,OAA9B,EAAyDC,IAAzD,EAAuEC,SAAvE,EAAwF;EAC7F,IAAIC,KAAJ;EACA,OAAOC,OAAO,CAACC,IAAR,CAAa,CAClBL,OADkB,EAElB,IAAII,OAAJ,CAAY,CAACE,CAAD,EAAIC,MAAJ,KAAc;IACxBJ,KAAK,GAAGK,UAAU,CAAC,MAAMD,MAAM,CAACL,SAAD,CAAb,EAA0BD,IAA1B,CAAlB;EACD,CAFD,CAFkB,CAAb,EAKJQ,OALI,CAKI,MAAMC,YAAY,CAACP,KAAD,CALtB,CAAP;AAMD","names":["runWithTimeout","promise","time","exception","timer","Promise","race","_","reject","setTimeout","finally","clearTimeout"],"sources":["/data/data/com.termux/files/home/Ionic/MyApp/node_modules/@capacitor-community/bluetooth-le/src/timeout.ts"],"sourcesContent":["export async function runWithTimeout(promise: Promise<unknown>, time: number, exception: symbol): Promise<unknown> {\n  let timer: ReturnType<typeof setTimeout>;\n  return Promise.race([\n    promise,\n    new Promise((_, reject) => {\n      timer = setTimeout(() => reject(exception), time);\n    }),\n  ]).finally(() => clearTimeout(timer));\n}\n"]},"metadata":{},"sourceType":"module"}