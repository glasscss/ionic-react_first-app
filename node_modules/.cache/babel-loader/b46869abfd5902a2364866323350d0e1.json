{"ast":null,"code":"import _regeneratorRuntime from \"/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { WebPlugin } from '@capacitor/core';\nexport var AppLauncherWeb = /*#__PURE__*/function (_WebPlugin) {\n  _inherits(AppLauncherWeb, _WebPlugin);\n\n  var _super = _createSuper(AppLauncherWeb);\n\n  function AppLauncherWeb() {\n    _classCallCheck(this, AppLauncherWeb);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppLauncherWeb, [{\n    key: \"canOpenUrl\",\n    value: function () {\n      var _canOpenUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_options) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", {\n                  value: true\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function canOpenUrl(_x) {\n        return _canOpenUrl.apply(this, arguments);\n      }\n\n      return canOpenUrl;\n    }()\n  }, {\n    key: \"openUrl\",\n    value: function () {\n      var _openUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(options) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                window.open(options.url, '_blank');\n                return _context2.abrupt(\"return\", {\n                  completed: true\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function openUrl(_x2) {\n        return _openUrl.apply(this, arguments);\n      }\n\n      return openUrl;\n    }()\n  }]);\n\n  return AppLauncherWeb;\n}(WebPlugin);","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AAUA,WAAaC,cAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;EAAA;;EAAA;IAAA;IAAA;MAAA,6EACE,iBAAiBC,QAAjB;QAAA;UAAA;YAAA;cAAA;gBAAA,iCACS;kBAAEC,KAAK,EAAE;gBAAT,CADT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CADF;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,0EAKE,kBAAcC,OAAd;QAAA;UAAA;YAAA;cAAA;gBACEC,MAAM,CAACC,IAAP,CAAYF,OAAO,CAACG,GAApB,EAAyB,QAAzB;gBADF,kCAES;kBAAEC,SAAS,EAAE;gBAAb,CAFT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CALF;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;;EAAA;AAAA,EAAoCR,SAApC","names":["WebPlugin","AppLauncherWeb","_options","value","options","window","open","url","completed"],"sources":["/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@capacitor/app-launcher/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  AppLauncherPlugin,\n  CanOpenURLOptions,\n  CanOpenURLResult,\n  OpenURLOptions,\n  OpenURLResult,\n} from './definitions';\n\nexport class AppLauncherWeb extends WebPlugin implements AppLauncherPlugin {\n  async canOpenUrl(_options: CanOpenURLOptions): Promise<CanOpenURLResult> {\n    return { value: true };\n  }\n\n  async openUrl(options: OpenURLOptions): Promise<OpenURLResult> {\n    window.open(options.url, '_blank');\n    return { completed: true };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}