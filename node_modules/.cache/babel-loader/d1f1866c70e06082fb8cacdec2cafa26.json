{"ast":null,"code":"import _regeneratorRuntime from \"/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Capacitor } from '@capacitor/core';\nimport { dataViewToHexString, hexStringToDataView } from './conversion';\nimport { BluetoothLe } from './plugin';\nimport { getQueue } from './queue';\nimport { validateUUID } from './validators';\n\nvar BleClientClass = /*#__PURE__*/function () {\n  function BleClientClass() {\n    _classCallCheck(this, BleClientClass);\n\n    this.scanListener = null;\n    this.eventListeners = new Map();\n    this.queue = getQueue(true);\n  }\n\n  _createClass(BleClientClass, [{\n    key: \"enableQueue\",\n    value: function enableQueue() {\n      this.queue = getQueue(true);\n    }\n  }, {\n    key: \"disableQueue\",\n    value: function disableQueue() {\n      this.queue = getQueue(false);\n    }\n  }, {\n    key: \"initialize\",\n    value: function () {\n      var _initialize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(options) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return BluetoothLe.initialize(options);\n\n                        case 2:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function initialize(_x) {\n        return _initialize.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n    /**\n     * Reports whether BLE is enabled on this device.\n     * Always returns `true` on **web**.\n     * @deprecated Use `isEnabled` instead.\n     */\n\n  }, {\n    key: \"getEnabled\",\n    value: function () {\n      var _getEnabled = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.isEnabled());\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getEnabled() {\n        return _getEnabled.apply(this, arguments);\n      }\n\n      return getEnabled;\n    }()\n  }, {\n    key: \"isEnabled\",\n    value: function () {\n      var _isEnabled = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var enabled;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n                  var result;\n                  return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.next = 2;\n                          return BluetoothLe.isEnabled();\n\n                        case 2:\n                          result = _context4.sent;\n                          return _context4.abrupt(\"return\", result.value);\n\n                        case 4:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                })));\n\n              case 2:\n                enabled = _context5.sent;\n                return _context5.abrupt(\"return\", enabled);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function isEnabled() {\n        return _isEnabled.apply(this, arguments);\n      }\n\n      return isEnabled;\n    }()\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n                  return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.next = 2;\n                          return BluetoothLe.enable();\n\n                        case 2:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"disable\",\n    value: function () {\n      var _disable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n                  return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          _context8.next = 2;\n                          return BluetoothLe.disable();\n\n                        case 2:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, _callee8);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function disable() {\n        return _disable.apply(this, arguments);\n      }\n\n      return disable;\n    }()\n  }, {\n    key: \"startEnabledNotifications\",\n    value: function () {\n      var _startEnabledNotifications = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(callback) {\n        var _this = this;\n\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n                  var _a, key, listener;\n\n                  return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n                    while (1) {\n                      switch (_context10.prev = _context10.next) {\n                        case 0:\n                          key = \"onEnabledChanged\";\n                          _context10.next = 3;\n                          return (_a = _this.eventListeners.get(key)) === null || _a === void 0 ? void 0 : _a.remove();\n\n                        case 3:\n                          _context10.next = 5;\n                          return BluetoothLe.addListener(key, function (result) {\n                            callback(result.value);\n                          });\n\n                        case 5:\n                          listener = _context10.sent;\n\n                          _this.eventListeners.set(key, listener);\n\n                          _context10.next = 9;\n                          return BluetoothLe.startEnabledNotifications();\n\n                        case 9:\n                        case \"end\":\n                          return _context10.stop();\n                      }\n                    }\n                  }, _callee10);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function startEnabledNotifications(_x2) {\n        return _startEnabledNotifications.apply(this, arguments);\n      }\n\n      return startEnabledNotifications;\n    }()\n  }, {\n    key: \"stopEnabledNotifications\",\n    value: function () {\n      var _stopEnabledNotifications = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        var _this2 = this;\n\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n                  var _a, key;\n\n                  return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n                    while (1) {\n                      switch (_context12.prev = _context12.next) {\n                        case 0:\n                          key = \"onEnabledChanged\";\n                          _context12.next = 3;\n                          return (_a = _this2.eventListeners.get(key)) === null || _a === void 0 ? void 0 : _a.remove();\n\n                        case 3:\n                          _this2.eventListeners.delete(key);\n\n                          _context12.next = 6;\n                          return BluetoothLe.stopEnabledNotifications();\n\n                        case 6:\n                        case \"end\":\n                          return _context12.stop();\n                      }\n                    }\n                  }, _callee12);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function stopEnabledNotifications() {\n        return _stopEnabledNotifications.apply(this, arguments);\n      }\n\n      return stopEnabledNotifications;\n    }()\n  }, {\n    key: \"isLocationEnabled\",\n    value: function () {\n      var _isLocationEnabled = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n        var enabled;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n                  var result;\n                  return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n                    while (1) {\n                      switch (_context14.prev = _context14.next) {\n                        case 0:\n                          _context14.next = 2;\n                          return BluetoothLe.isLocationEnabled();\n\n                        case 2:\n                          result = _context14.sent;\n                          return _context14.abrupt(\"return\", result.value);\n\n                        case 4:\n                        case \"end\":\n                          return _context14.stop();\n                      }\n                    }\n                  }, _callee14);\n                })));\n\n              case 2:\n                enabled = _context15.sent;\n                return _context15.abrupt(\"return\", enabled);\n\n              case 4:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function isLocationEnabled() {\n        return _isLocationEnabled.apply(this, arguments);\n      }\n\n      return isLocationEnabled;\n    }()\n  }, {\n    key: \"openLocationSettings\",\n    value: function () {\n      var _openLocationSettings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {\n                  return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n                    while (1) {\n                      switch (_context16.prev = _context16.next) {\n                        case 0:\n                          _context16.next = 2;\n                          return BluetoothLe.openLocationSettings();\n\n                        case 2:\n                        case \"end\":\n                          return _context16.stop();\n                      }\n                    }\n                  }, _callee16);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function openLocationSettings() {\n        return _openLocationSettings.apply(this, arguments);\n      }\n\n      return openLocationSettings;\n    }()\n  }, {\n    key: \"openBluetoothSettings\",\n    value: function () {\n      var _openBluetoothSettings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {\n                  return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n                    while (1) {\n                      switch (_context18.prev = _context18.next) {\n                        case 0:\n                          _context18.next = 2;\n                          return BluetoothLe.openBluetoothSettings();\n\n                        case 2:\n                        case \"end\":\n                          return _context18.stop();\n                      }\n                    }\n                  }, _callee18);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function openBluetoothSettings() {\n        return _openBluetoothSettings.apply(this, arguments);\n      }\n\n      return openBluetoothSettings;\n    }()\n  }, {\n    key: \"openAppSettings\",\n    value: function () {\n      var _openAppSettings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {\n                  return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n                    while (1) {\n                      switch (_context20.prev = _context20.next) {\n                        case 0:\n                          _context20.next = 2;\n                          return BluetoothLe.openAppSettings();\n\n                        case 2:\n                        case \"end\":\n                          return _context20.stop();\n                      }\n                    }\n                  }, _callee20);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function openAppSettings() {\n        return _openAppSettings.apply(this, arguments);\n      }\n\n      return openAppSettings;\n    }()\n  }, {\n    key: \"setDisplayStrings\",\n    value: function () {\n      var _setDisplayStrings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(displayStrings) {\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {\n                  return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n                    while (1) {\n                      switch (_context22.prev = _context22.next) {\n                        case 0:\n                          _context22.next = 2;\n                          return BluetoothLe.setDisplayStrings(displayStrings);\n\n                        case 2:\n                        case \"end\":\n                          return _context22.stop();\n                      }\n                    }\n                  }, _callee22);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function setDisplayStrings(_x3) {\n        return _setDisplayStrings.apply(this, arguments);\n      }\n\n      return setDisplayStrings;\n    }()\n  }, {\n    key: \"requestDevice\",\n    value: function () {\n      var _requestDevice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(options) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                _context25.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {\n                  var device;\n                  return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n                    while (1) {\n                      switch (_context24.prev = _context24.next) {\n                        case 0:\n                          _context24.next = 2;\n                          return BluetoothLe.requestDevice(options);\n\n                        case 2:\n                          device = _context24.sent;\n                          return _context24.abrupt(\"return\", device);\n\n                        case 4:\n                        case \"end\":\n                          return _context24.stop();\n                      }\n                    }\n                  }, _callee24);\n                })));\n\n              case 2:\n                result = _context25.sent;\n                return _context25.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function requestDevice(_x4) {\n        return _requestDevice.apply(this, arguments);\n      }\n\n      return requestDevice;\n    }()\n  }, {\n    key: \"requestLEScan\",\n    value: function () {\n      var _requestLEScan = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27(options, callback) {\n        var _this3 = this;\n\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                _context27.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {\n                  var _a;\n\n                  return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n                    while (1) {\n                      switch (_context26.prev = _context26.next) {\n                        case 0:\n                          _context26.next = 2;\n                          return (_a = _this3.scanListener) === null || _a === void 0 ? void 0 : _a.remove();\n\n                        case 2:\n                          _context26.next = 4;\n                          return BluetoothLe.addListener('onScanResult', function (resultInternal) {\n                            var result = Object.assign(Object.assign({}, resultInternal), {\n                              manufacturerData: _this3.convertObject(resultInternal.manufacturerData),\n                              serviceData: _this3.convertObject(resultInternal.serviceData),\n                              rawAdvertisement: resultInternal.rawAdvertisement ? _this3.convertValue(resultInternal.rawAdvertisement) : undefined\n                            });\n                            callback(result);\n                          });\n\n                        case 4:\n                          _this3.scanListener = _context26.sent;\n                          _context26.next = 7;\n                          return BluetoothLe.requestLEScan(options);\n\n                        case 7:\n                        case \"end\":\n                          return _context26.stop();\n                      }\n                    }\n                  }, _callee26);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function requestLEScan(_x5, _x6) {\n        return _requestLEScan.apply(this, arguments);\n      }\n\n      return requestLEScan;\n    }()\n  }, {\n    key: \"stopLEScan\",\n    value: function () {\n      var _stopLEScan = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29() {\n        var _this4 = this;\n\n        return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                _context29.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28() {\n                  var _a;\n\n                  return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n                    while (1) {\n                      switch (_context28.prev = _context28.next) {\n                        case 0:\n                          _context28.next = 2;\n                          return (_a = _this4.scanListener) === null || _a === void 0 ? void 0 : _a.remove();\n\n                        case 2:\n                          _this4.scanListener = null;\n                          _context28.next = 5;\n                          return BluetoothLe.stopLEScan();\n\n                        case 5:\n                        case \"end\":\n                          return _context28.stop();\n                      }\n                    }\n                  }, _callee28);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this);\n      }));\n\n      function stopLEScan() {\n        return _stopLEScan.apply(this, arguments);\n      }\n\n      return stopLEScan;\n    }()\n  }, {\n    key: \"getDevices\",\n    value: function () {\n      var _getDevices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(deviceIds) {\n        return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                return _context31.abrupt(\"return\", this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30() {\n                  var result;\n                  return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n                    while (1) {\n                      switch (_context30.prev = _context30.next) {\n                        case 0:\n                          _context30.next = 2;\n                          return BluetoothLe.getDevices({\n                            deviceIds: deviceIds\n                          });\n\n                        case 2:\n                          result = _context30.sent;\n                          return _context30.abrupt(\"return\", result.devices);\n\n                        case 4:\n                        case \"end\":\n                          return _context30.stop();\n                      }\n                    }\n                  }, _callee30);\n                }))));\n\n              case 1:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this);\n      }));\n\n      function getDevices(_x7) {\n        return _getDevices.apply(this, arguments);\n      }\n\n      return getDevices;\n    }()\n  }, {\n    key: \"getConnectedDevices\",\n    value: function () {\n      var _getConnectedDevices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(services) {\n        return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                return _context33.abrupt(\"return\", this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {\n                  var result;\n                  return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n                    while (1) {\n                      switch (_context32.prev = _context32.next) {\n                        case 0:\n                          _context32.next = 2;\n                          return BluetoothLe.getConnectedDevices({\n                            services: services\n                          });\n\n                        case 2:\n                          result = _context32.sent;\n                          return _context32.abrupt(\"return\", result.devices);\n\n                        case 4:\n                        case \"end\":\n                          return _context32.stop();\n                      }\n                    }\n                  }, _callee32);\n                }))));\n\n              case 1:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33, this);\n      }));\n\n      function getConnectedDevices(_x8) {\n        return _getConnectedDevices.apply(this, arguments);\n      }\n\n      return getConnectedDevices;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(deviceId, onDisconnect, options) {\n        var _this5 = this;\n\n        return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n          while (1) {\n            switch (_context35.prev = _context35.next) {\n              case 0:\n                _context35.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34() {\n                  var _a, key, listener;\n\n                  return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n                    while (1) {\n                      switch (_context34.prev = _context34.next) {\n                        case 0:\n                          if (!onDisconnect) {\n                            _context34.next = 8;\n                            break;\n                          }\n\n                          key = \"disconnected|\".concat(deviceId);\n                          _context34.next = 4;\n                          return (_a = _this5.eventListeners.get(key)) === null || _a === void 0 ? void 0 : _a.remove();\n\n                        case 4:\n                          _context34.next = 6;\n                          return BluetoothLe.addListener(key, function () {\n                            onDisconnect(deviceId);\n                          });\n\n                        case 6:\n                          listener = _context34.sent;\n\n                          _this5.eventListeners.set(key, listener);\n\n                        case 8:\n                          _context34.next = 10;\n                          return BluetoothLe.connect(Object.assign({\n                            deviceId: deviceId\n                          }, options));\n\n                        case 10:\n                        case \"end\":\n                          return _context34.stop();\n                      }\n                    }\n                  }, _callee34);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context35.stop();\n            }\n          }\n        }, _callee35, this);\n      }));\n\n      function connect(_x9, _x10, _x11) {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"createBond\",\n    value: function () {\n      var _createBond = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37(deviceId) {\n        return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                _context37.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36() {\n                  return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n                    while (1) {\n                      switch (_context36.prev = _context36.next) {\n                        case 0:\n                          _context36.next = 2;\n                          return BluetoothLe.createBond({\n                            deviceId: deviceId\n                          });\n\n                        case 2:\n                        case \"end\":\n                          return _context36.stop();\n                      }\n                    }\n                  }, _callee36);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37, this);\n      }));\n\n      function createBond(_x12) {\n        return _createBond.apply(this, arguments);\n      }\n\n      return createBond;\n    }()\n  }, {\n    key: \"isBonded\",\n    value: function () {\n      var _isBonded = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39(deviceId) {\n        var isBonded;\n        return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n          while (1) {\n            switch (_context39.prev = _context39.next) {\n              case 0:\n                _context39.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38() {\n                  var result;\n                  return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n                    while (1) {\n                      switch (_context38.prev = _context38.next) {\n                        case 0:\n                          _context38.next = 2;\n                          return BluetoothLe.isBonded({\n                            deviceId: deviceId\n                          });\n\n                        case 2:\n                          result = _context38.sent;\n                          return _context38.abrupt(\"return\", result.value);\n\n                        case 4:\n                        case \"end\":\n                          return _context38.stop();\n                      }\n                    }\n                  }, _callee38);\n                })));\n\n              case 2:\n                isBonded = _context39.sent;\n                return _context39.abrupt(\"return\", isBonded);\n\n              case 4:\n              case \"end\":\n                return _context39.stop();\n            }\n          }\n        }, _callee39, this);\n      }));\n\n      function isBonded(_x13) {\n        return _isBonded.apply(this, arguments);\n      }\n\n      return isBonded;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee41(deviceId) {\n        return _regeneratorRuntime().wrap(function _callee41$(_context41) {\n          while (1) {\n            switch (_context41.prev = _context41.next) {\n              case 0:\n                _context41.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40() {\n                  return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n                    while (1) {\n                      switch (_context40.prev = _context40.next) {\n                        case 0:\n                          _context40.next = 2;\n                          return BluetoothLe.disconnect({\n                            deviceId: deviceId\n                          });\n\n                        case 2:\n                        case \"end\":\n                          return _context40.stop();\n                      }\n                    }\n                  }, _callee40);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context41.stop();\n            }\n          }\n        }, _callee41, this);\n      }));\n\n      function disconnect(_x14) {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"getServices\",\n    value: function () {\n      var _getServices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee43(deviceId) {\n        var services;\n        return _regeneratorRuntime().wrap(function _callee43$(_context43) {\n          while (1) {\n            switch (_context43.prev = _context43.next) {\n              case 0:\n                _context43.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee42() {\n                  var result;\n                  return _regeneratorRuntime().wrap(function _callee42$(_context42) {\n                    while (1) {\n                      switch (_context42.prev = _context42.next) {\n                        case 0:\n                          _context42.next = 2;\n                          return BluetoothLe.getServices({\n                            deviceId: deviceId\n                          });\n\n                        case 2:\n                          result = _context42.sent;\n                          return _context42.abrupt(\"return\", result.services);\n\n                        case 4:\n                        case \"end\":\n                          return _context42.stop();\n                      }\n                    }\n                  }, _callee42);\n                })));\n\n              case 2:\n                services = _context43.sent;\n                return _context43.abrupt(\"return\", services);\n\n              case 4:\n              case \"end\":\n                return _context43.stop();\n            }\n          }\n        }, _callee43, this);\n      }));\n\n      function getServices(_x15) {\n        return _getServices.apply(this, arguments);\n      }\n\n      return getServices;\n    }()\n  }, {\n    key: \"readRssi\",\n    value: function () {\n      var _readRssi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee45(deviceId) {\n        var value;\n        return _regeneratorRuntime().wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                _context45.next = 2;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee44() {\n                  var result;\n                  return _regeneratorRuntime().wrap(function _callee44$(_context44) {\n                    while (1) {\n                      switch (_context44.prev = _context44.next) {\n                        case 0:\n                          _context44.next = 2;\n                          return BluetoothLe.readRssi({\n                            deviceId: deviceId\n                          });\n\n                        case 2:\n                          result = _context44.sent;\n                          return _context44.abrupt(\"return\", parseFloat(result.value));\n\n                        case 4:\n                        case \"end\":\n                          return _context44.stop();\n                      }\n                    }\n                  }, _callee44);\n                })));\n\n              case 2:\n                value = _context45.sent;\n                return _context45.abrupt(\"return\", value);\n\n              case 4:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45, this);\n      }));\n\n      function readRssi(_x16) {\n        return _readRssi.apply(this, arguments);\n      }\n\n      return readRssi;\n    }()\n  }, {\n    key: \"read\",\n    value: function () {\n      var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee47(deviceId, service, characteristic, options) {\n        var _this6 = this;\n\n        var value;\n        return _regeneratorRuntime().wrap(function _callee47$(_context47) {\n          while (1) {\n            switch (_context47.prev = _context47.next) {\n              case 0:\n                service = validateUUID(service);\n                characteristic = validateUUID(characteristic);\n                _context47.next = 4;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee46() {\n                  var result;\n                  return _regeneratorRuntime().wrap(function _callee46$(_context46) {\n                    while (1) {\n                      switch (_context46.prev = _context46.next) {\n                        case 0:\n                          _context46.next = 2;\n                          return BluetoothLe.read(Object.assign({\n                            deviceId: deviceId,\n                            service: service,\n                            characteristic: characteristic\n                          }, options));\n\n                        case 2:\n                          result = _context46.sent;\n                          return _context46.abrupt(\"return\", _this6.convertValue(result.value));\n\n                        case 4:\n                        case \"end\":\n                          return _context46.stop();\n                      }\n                    }\n                  }, _callee46);\n                })));\n\n              case 4:\n                value = _context47.sent;\n                return _context47.abrupt(\"return\", value);\n\n              case 6:\n              case \"end\":\n                return _context47.stop();\n            }\n          }\n        }, _callee47, this);\n      }));\n\n      function read(_x17, _x18, _x19, _x20) {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  }, {\n    key: \"write\",\n    value: function () {\n      var _write = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee49(deviceId, service, characteristic, value, options) {\n        return _regeneratorRuntime().wrap(function _callee49$(_context49) {\n          while (1) {\n            switch (_context49.prev = _context49.next) {\n              case 0:\n                service = validateUUID(service);\n                characteristic = validateUUID(characteristic);\n                return _context49.abrupt(\"return\", this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee48() {\n                  var writeValue;\n                  return _regeneratorRuntime().wrap(function _callee48$(_context48) {\n                    while (1) {\n                      switch (_context48.prev = _context48.next) {\n                        case 0:\n                          if (value === null || value === void 0 ? void 0 : value.buffer) {\n                            _context48.next = 2;\n                            break;\n                          }\n\n                          throw new Error('Invalid data.');\n\n                        case 2:\n                          writeValue = value;\n\n                          if (Capacitor.getPlatform() !== 'web') {\n                            // on native we can only write strings\n                            writeValue = dataViewToHexString(value);\n                          }\n\n                          _context48.next = 6;\n                          return BluetoothLe.write(Object.assign({\n                            deviceId: deviceId,\n                            service: service,\n                            characteristic: characteristic,\n                            value: writeValue\n                          }, options));\n\n                        case 6:\n                        case \"end\":\n                          return _context48.stop();\n                      }\n                    }\n                  }, _callee48);\n                }))));\n\n              case 3:\n              case \"end\":\n                return _context49.stop();\n            }\n          }\n        }, _callee49, this);\n      }));\n\n      function write(_x21, _x22, _x23, _x24, _x25) {\n        return _write.apply(this, arguments);\n      }\n\n      return write;\n    }()\n  }, {\n    key: \"writeWithoutResponse\",\n    value: function () {\n      var _writeWithoutResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee51(deviceId, service, characteristic, value, options) {\n        return _regeneratorRuntime().wrap(function _callee51$(_context51) {\n          while (1) {\n            switch (_context51.prev = _context51.next) {\n              case 0:\n                service = validateUUID(service);\n                characteristic = validateUUID(characteristic);\n                _context51.next = 4;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee50() {\n                  var writeValue;\n                  return _regeneratorRuntime().wrap(function _callee50$(_context50) {\n                    while (1) {\n                      switch (_context50.prev = _context50.next) {\n                        case 0:\n                          if (value === null || value === void 0 ? void 0 : value.buffer) {\n                            _context50.next = 2;\n                            break;\n                          }\n\n                          throw new Error('Invalid data.');\n\n                        case 2:\n                          writeValue = value;\n\n                          if (Capacitor.getPlatform() !== 'web') {\n                            // on native we can only write strings\n                            writeValue = dataViewToHexString(value);\n                          }\n\n                          _context50.next = 6;\n                          return BluetoothLe.writeWithoutResponse(Object.assign({\n                            deviceId: deviceId,\n                            service: service,\n                            characteristic: characteristic,\n                            value: writeValue\n                          }, options));\n\n                        case 6:\n                        case \"end\":\n                          return _context50.stop();\n                      }\n                    }\n                  }, _callee50);\n                })));\n\n              case 4:\n              case \"end\":\n                return _context51.stop();\n            }\n          }\n        }, _callee51, this);\n      }));\n\n      function writeWithoutResponse(_x26, _x27, _x28, _x29, _x30) {\n        return _writeWithoutResponse.apply(this, arguments);\n      }\n\n      return writeWithoutResponse;\n    }()\n  }, {\n    key: \"readDescriptor\",\n    value: function () {\n      var _readDescriptor = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee53(deviceId, service, characteristic, descriptor, options) {\n        var _this7 = this;\n\n        var value;\n        return _regeneratorRuntime().wrap(function _callee53$(_context53) {\n          while (1) {\n            switch (_context53.prev = _context53.next) {\n              case 0:\n                service = validateUUID(service);\n                characteristic = validateUUID(characteristic);\n                descriptor = validateUUID(descriptor);\n                _context53.next = 5;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee52() {\n                  var result;\n                  return _regeneratorRuntime().wrap(function _callee52$(_context52) {\n                    while (1) {\n                      switch (_context52.prev = _context52.next) {\n                        case 0:\n                          _context52.next = 2;\n                          return BluetoothLe.readDescriptor(Object.assign({\n                            deviceId: deviceId,\n                            service: service,\n                            characteristic: characteristic,\n                            descriptor: descriptor\n                          }, options));\n\n                        case 2:\n                          result = _context52.sent;\n                          return _context52.abrupt(\"return\", _this7.convertValue(result.value));\n\n                        case 4:\n                        case \"end\":\n                          return _context52.stop();\n                      }\n                    }\n                  }, _callee52);\n                })));\n\n              case 5:\n                value = _context53.sent;\n                return _context53.abrupt(\"return\", value);\n\n              case 7:\n              case \"end\":\n                return _context53.stop();\n            }\n          }\n        }, _callee53, this);\n      }));\n\n      function readDescriptor(_x31, _x32, _x33, _x34, _x35) {\n        return _readDescriptor.apply(this, arguments);\n      }\n\n      return readDescriptor;\n    }()\n  }, {\n    key: \"writeDescriptor\",\n    value: function () {\n      var _writeDescriptor = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee55(deviceId, service, characteristic, descriptor, value, options) {\n        return _regeneratorRuntime().wrap(function _callee55$(_context55) {\n          while (1) {\n            switch (_context55.prev = _context55.next) {\n              case 0:\n                service = validateUUID(service);\n                characteristic = validateUUID(characteristic);\n                descriptor = validateUUID(descriptor);\n                return _context55.abrupt(\"return\", this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee54() {\n                  var writeValue;\n                  return _regeneratorRuntime().wrap(function _callee54$(_context54) {\n                    while (1) {\n                      switch (_context54.prev = _context54.next) {\n                        case 0:\n                          if (value === null || value === void 0 ? void 0 : value.buffer) {\n                            _context54.next = 2;\n                            break;\n                          }\n\n                          throw new Error('Invalid data.');\n\n                        case 2:\n                          writeValue = value;\n\n                          if (Capacitor.getPlatform() !== 'web') {\n                            // on native we can only write strings\n                            writeValue = dataViewToHexString(value);\n                          }\n\n                          _context54.next = 6;\n                          return BluetoothLe.writeDescriptor(Object.assign({\n                            deviceId: deviceId,\n                            service: service,\n                            characteristic: characteristic,\n                            descriptor: descriptor,\n                            value: writeValue\n                          }, options));\n\n                        case 6:\n                        case \"end\":\n                          return _context54.stop();\n                      }\n                    }\n                  }, _callee54);\n                }))));\n\n              case 4:\n              case \"end\":\n                return _context55.stop();\n            }\n          }\n        }, _callee55, this);\n      }));\n\n      function writeDescriptor(_x36, _x37, _x38, _x39, _x40, _x41) {\n        return _writeDescriptor.apply(this, arguments);\n      }\n\n      return writeDescriptor;\n    }()\n  }, {\n    key: \"startNotifications\",\n    value: function () {\n      var _startNotifications = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee57(deviceId, service, characteristic, callback) {\n        var _this8 = this;\n\n        return _regeneratorRuntime().wrap(function _callee57$(_context57) {\n          while (1) {\n            switch (_context57.prev = _context57.next) {\n              case 0:\n                service = validateUUID(service);\n                characteristic = validateUUID(characteristic);\n                _context57.next = 4;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee56() {\n                  var _a, key, listener;\n\n                  return _regeneratorRuntime().wrap(function _callee56$(_context56) {\n                    while (1) {\n                      switch (_context56.prev = _context56.next) {\n                        case 0:\n                          key = \"notification|\".concat(deviceId, \"|\").concat(service, \"|\").concat(characteristic);\n                          _context56.next = 3;\n                          return (_a = _this8.eventListeners.get(key)) === null || _a === void 0 ? void 0 : _a.remove();\n\n                        case 3:\n                          _context56.next = 5;\n                          return BluetoothLe.addListener(key, function (event) {\n                            callback(_this8.convertValue(event === null || event === void 0 ? void 0 : event.value));\n                          });\n\n                        case 5:\n                          listener = _context56.sent;\n\n                          _this8.eventListeners.set(key, listener);\n\n                          _context56.next = 9;\n                          return BluetoothLe.startNotifications({\n                            deviceId: deviceId,\n                            service: service,\n                            characteristic: characteristic\n                          });\n\n                        case 9:\n                        case \"end\":\n                          return _context56.stop();\n                      }\n                    }\n                  }, _callee56);\n                })));\n\n              case 4:\n              case \"end\":\n                return _context57.stop();\n            }\n          }\n        }, _callee57, this);\n      }));\n\n      function startNotifications(_x42, _x43, _x44, _x45) {\n        return _startNotifications.apply(this, arguments);\n      }\n\n      return startNotifications;\n    }()\n  }, {\n    key: \"stopNotifications\",\n    value: function () {\n      var _stopNotifications = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee59(deviceId, service, characteristic) {\n        var _this9 = this;\n\n        return _regeneratorRuntime().wrap(function _callee59$(_context59) {\n          while (1) {\n            switch (_context59.prev = _context59.next) {\n              case 0:\n                service = validateUUID(service);\n                characteristic = validateUUID(characteristic);\n                _context59.next = 4;\n                return this.queue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee58() {\n                  var _a, key;\n\n                  return _regeneratorRuntime().wrap(function _callee58$(_context58) {\n                    while (1) {\n                      switch (_context58.prev = _context58.next) {\n                        case 0:\n                          key = \"notification|\".concat(deviceId, \"|\").concat(service, \"|\").concat(characteristic);\n                          _context58.next = 3;\n                          return (_a = _this9.eventListeners.get(key)) === null || _a === void 0 ? void 0 : _a.remove();\n\n                        case 3:\n                          _this9.eventListeners.delete(key);\n\n                          _context58.next = 6;\n                          return BluetoothLe.stopNotifications({\n                            deviceId: deviceId,\n                            service: service,\n                            characteristic: characteristic\n                          });\n\n                        case 6:\n                        case \"end\":\n                          return _context58.stop();\n                      }\n                    }\n                  }, _callee58);\n                })));\n\n              case 4:\n              case \"end\":\n                return _context59.stop();\n            }\n          }\n        }, _callee59, this);\n      }));\n\n      function stopNotifications(_x46, _x47, _x48) {\n        return _stopNotifications.apply(this, arguments);\n      }\n\n      return stopNotifications;\n    }()\n  }, {\n    key: \"convertValue\",\n    value: function convertValue(value) {\n      if (typeof value === 'string') {\n        return hexStringToDataView(value);\n      } else if (value === undefined) {\n        return new DataView(new ArrayBuffer(0));\n      }\n\n      return value;\n    }\n  }, {\n    key: \"convertObject\",\n    value: function convertObject(obj) {\n      if (obj === undefined) {\n        return undefined;\n      }\n\n      var result = {};\n\n      for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        result[key] = this.convertValue(obj[key]);\n      }\n\n      return result;\n    }\n  }]);\n\n  return BleClientClass;\n}();\n\nexport var BleClient = new BleClientClass();","map":{"version":3,"mappings":";;;;AACA,SAASA,SAAT,QAA0B,iBAA1B;AAGA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,cAAzD;AAYA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,YAAT,QAA6B,cAA7B;;IA8PMC,c;EAAN;IAAA;;IACU,oBAA4C,IAA5C;IACA,sBAAiB,IAAIC,GAAJ,EAAjB;IACA,aAAQH,QAAQ,CAAC,IAAD,CAAhB;EA0XT;;;;WAxXC,uBAAW;MACT,KAAKI,KAAL,GAAaJ,QAAQ,CAAC,IAAD,CAArB;IACD;;;WAED,wBAAY;MACV,KAAKI,KAAL,GAAaJ,QAAQ,CAAC,KAAD,CAArB;IACD;;;;mFAED,kBAAiBK,OAAjB;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKD,KAAL,0EAAW;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACTL,WAAW,CAACO,UAAZ,CAAuBD,OAAvB,CADS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;IAMA;;;;;;;;;mFAKA;QAAA;UAAA;YAAA;cAAA;gBAAA,kCACS,KAAKE,SAAL,EADT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;kFAIA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACwB,KAAKH,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACVL,WAAW,CAACQ,SAAZ,EADU;;wBAAA;0BACzBC,MADyB;0BAAA,kCAExBA,MAAM,CAACC,KAFiB;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADxB;;cAAA;gBACQC,OADR;gBAAA,kCAKSA,OALT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;+EAQA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKN,KAAL,0EAAW;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACTL,WAAW,CAACY,MAAZ,EADS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;gFAMA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKP,KAAL,0EAAW;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACTL,WAAW,CAACa,OAAZ,EADS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;kGAMA,mBAAgCC,QAAhC;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKT,KAAL,0EAAW;kBAAA;;kBAAA;oBAAA;sBAAA;wBAAA;0BACTU,GADS;0BAAA;0BAAA,OAET,WAAI,CAACC,cAAL,CAAoBC,GAApB,CAAwBF,GAAxB,OAA4B,IAA5B,IAA4BG,aAA5B,GAA4B,MAA5B,GAA4BA,GAAEC,MAAF,EAFnB;;wBAAA;0BAAA;0BAAA,OAGQnB,WAAW,CAACoB,WAAZ,CAAwBL,GAAxB,EAA6B,UAACN,MAAD,EAAW;4BAC7DK,QAAQ,CAACL,MAAM,CAACC,KAAR,CAAR;0BACD,CAFsB,CAHR;;wBAAA;0BAGTW,QAHS;;0BAMf,KAAI,CAACL,cAAL,CAAoBM,GAApB,CAAwBP,GAAxB,EAA6BM,QAA7B;;0BANe;0BAAA,OAOTrB,WAAW,CAACuB,yBAAZ,EAPS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;iGAYA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKlB,KAAL,0EAAW;kBAAA;;kBAAA;oBAAA;sBAAA;wBAAA;0BACTU,GADS;0BAAA;0BAAA,OAET,YAAI,CAACC,cAAL,CAAoBC,GAApB,CAAwBF,GAAxB,OAA4B,IAA5B,IAA4BG,aAA5B,GAA4B,MAA5B,GAA4BA,GAAEC,MAAF,EAFnB;;wBAAA;0BAGf,MAAI,CAACH,cAAL,CAAoBQ,MAApB,CAA2BT,GAA3B;;0BAHe;0BAAA,OAITf,WAAW,CAACyB,wBAAZ,EAJS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;0FASA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACwB,KAAKpB,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACVL,WAAW,CAAC0B,iBAAZ,EADU;;wBAAA;0BACzBjB,MADyB;0BAAA,mCAExBA,MAAM,CAACC,KAFiB;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADxB;;cAAA;gBACQC,OADR;gBAAA,mCAKSA,OALT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;6FAQA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKN,KAAL,0EAAW;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACTL,WAAW,CAAC2B,oBAAZ,EADS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;8FAMA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKtB,KAAL,0EAAW;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACTL,WAAW,CAAC4B,qBAAZ,EADS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;wFAMA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKvB,KAAL,0EAAW;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACTL,WAAW,CAAC6B,eAAZ,EADS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;0FAMA,mBAAwBC,cAAxB;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKzB,KAAL,0EAAW;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACTL,WAAW,CAAC+B,iBAAZ,CAA8BD,cAA9B,CADS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;sFAMA,mBAAoBxB,OAApB;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACuB,KAAKD,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACTL,WAAW,CAACgC,aAAZ,CAA0B1B,OAA1B,CADS;;wBAAA;0BACxB2B,MADwB;0BAAA,mCAEvBA,MAFuB;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADvB;;cAAA;gBACQxB,MADR;gBAAA,mCAKSA,MALT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;sFAQA,mBAAoBH,OAApB,EAAsDQ,QAAtD;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKT,KAAL,0EAAW;kBAAA;;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACT,YAAI,CAAC6B,YAAL,MAAiB,IAAjB,IAAiBhB,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEC,MAAF,EADR;;wBAAA;0BAAA;0BAAA,OAEWnB,WAAW,CAACoB,WAAZ,CAAwB,cAAxB,EAAwC,UAACe,cAAD,EAAuC;4BACvG,IAAM1B,MAAM,mCACP0B,cADO,GACO;8BACjBC,gBAAgB,EAAE,MAAI,CAACC,aAAL,CAAmBF,cAAc,CAACC,gBAAlC,CADD;8BAEjBE,WAAW,EAAE,MAAI,CAACD,aAAL,CAAmBF,cAAc,CAACG,WAAlC,CAFI;8BAGjBC,gBAAgB,EAAEJ,cAAc,CAACI,gBAAf,GACd,MAAI,CAACC,YAAL,CAAkBL,cAAc,CAACI,gBAAjC,CADc,GAEdE;4BALa,CADP,CAAZ;4BAQA3B,QAAQ,CAACL,MAAD,CAAR;0BACD,CAVyB,CAFX;;wBAAA;0BAEf,MAAI,CAACyB,YAFU;0BAAA;0BAAA,OAaTlC,WAAW,CAAC0C,aAAZ,CAA0BpC,OAA1B,CAbS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;mFAkBA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKD,KAAL,0EAAW;kBAAA;;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACT,YAAI,CAAC6B,YAAL,MAAiB,IAAjB,IAAiBhB,aAAjB,GAAiB,MAAjB,GAAiBA,GAAEC,MAAF,EADR;;wBAAA;0BAEf,MAAI,CAACe,YAAL,GAAoB,IAApB;0BAFe;0BAAA,OAGTlC,WAAW,CAAC2C,UAAZ,EAHS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;mFAQA,mBAAiBC,SAAjB;QAAA;UAAA;YAAA;cAAA;gBAAA,mCACS,KAAKvC,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACKL,WAAW,CAAC6C,UAAZ,CAAuB;4BAAED,SAAS,EAATA;0BAAF,CAAvB,CADL;;wBAAA;0BACVnC,MADU;0BAAA,mCAETA,MAAM,CAACqC,OAFE;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;4FAOA,mBAA0BC,QAA1B;QAAA;UAAA;YAAA;cAAA;gBAAA,mCACS,KAAK1C,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACKL,WAAW,CAACgD,mBAAZ,CAAgC;4BAAED,QAAQ,EAARA;0BAAF,CAAhC,CADL;;wBAAA;0BACVtC,MADU;0BAAA,mCAETA,MAAM,CAACqC,OAFE;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;gFAOA,mBAAcG,QAAd,EAAgCC,YAAhC,EAA2E5C,OAA3E;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKD,KAAL,0EAAW;kBAAA;;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA,KACX6C,YADW;4BAAA;4BAAA;0BAAA;;0BAEPnC,GAFO,0BAEekC,QAFf;0BAAA;0BAAA,OAGP,YAAI,CAACjC,cAAL,CAAoBC,GAApB,CAAwBF,GAAxB,OAA4B,IAA5B,IAA4BG,aAA5B,GAA4B,MAA5B,GAA4BA,GAAEC,MAAF,EAHrB;;wBAAA;0BAAA;0BAAA,OAIUnB,WAAW,CAACoB,WAAZ,CAAwBL,GAAxB,EAA6B,YAAK;4BACvDmC,YAAY,CAACD,QAAD,CAAZ;0BACD,CAFsB,CAJV;;wBAAA;0BAIP5B,QAJO;;0BAOb,MAAI,CAACL,cAAL,CAAoBM,GAApB,CAAwBP,GAAxB,EAA6BM,QAA7B;;wBAPa;0BAAA;0BAAA,OASTrB,WAAW,CAACmD,OAAZ,CAAmBC;4BAAGH,QAAQ,EAARA;0BAAH,GAAgB3C,OAAhB,CAAnB,CATS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;mFAcA,mBAAiB2C,QAAjB;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAK5C,KAAL,0EAAW;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACTL,WAAW,CAACqD,UAAZ,CAAuB;4BAAEJ,QAAQ,EAARA;0BAAF,CAAvB,CADS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;iFAMA,mBAAeA,QAAf;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACyB,KAAK5C,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACXL,WAAW,CAACsD,QAAZ,CAAqB;4BAAEL,QAAQ,EAARA;0BAAF,CAArB,CADW;;wBAAA;0BAC1BxC,MAD0B;0BAAA,mCAEzBA,MAAM,CAACC,KAFkB;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADzB;;cAAA;gBACQ4C,QADR;gBAAA,mCAKSA,QALT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;mFAQA,mBAAiBL,QAAjB;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAK5C,KAAL,0EAAW;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACTL,WAAW,CAACuD,UAAZ,CAAuB;4BAAEN,QAAQ,EAARA;0BAAF,CAAvB,CADS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;oFAMA,mBAAkBA,QAAlB;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACyB,KAAK5C,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACXL,WAAW,CAACwD,WAAZ,CAAwB;4BAAEP,QAAQ,EAARA;0BAAF,CAAxB,CADW;;wBAAA;0BAC1BxC,MAD0B;0BAAA,mCAEzBA,MAAM,CAACsC,QAFkB;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADzB;;cAAA;gBACQA,QADR;gBAAA,mCAKSA,QALT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;iFAQA,mBAAeE,QAAf;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACsB,KAAK5C,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACRL,WAAW,CAACyD,QAAZ,CAAqB;4BAAER,QAAQ,EAARA;0BAAF,CAArB,CADQ;;wBAAA;0BACvBxC,MADuB;0BAAA,mCAEtBiD,UAAU,CAACjD,MAAM,CAACC,KAAR,CAFY;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GADtB;;cAAA;gBACQA,KADR;gBAAA,mCAKSA,KALT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;6EAQA,mBAAWuC,QAAX,EAA6BU,OAA7B,EAA8CC,cAA9C,EAAsEtD,OAAtE;QAAA;;QAAA;QAAA;UAAA;YAAA;cAAA;gBACEqD,OAAO,GAAGzD,YAAY,CAACyD,OAAD,CAAtB;gBACAC,cAAc,GAAG1D,YAAY,CAAC0D,cAAD,CAA7B;gBAFF;gBAAA,OAGsB,KAAKvD,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACRL,WAAW,CAAC6D,IAAZ,CAAgBT;4BACnCH,QAAQ,EAARA,QADmC;4BAEnCU,OAAO,EAAPA,OAFmC;4BAGnCC,cAAc,EAAdA;0BAHmC,GAIhCtD,OAJgC,CAAhB,CADQ;;wBAAA;0BACvBG,MADuB;0BAAA,mCAOtB,MAAI,CAAC+B,YAAL,CAAkB/B,MAAM,CAACC,KAAzB,CAPsB;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GAHtB;;cAAA;gBAGQA,KAHR;gBAAA,mCAYSA,KAZT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;8EAeA,mBACEuC,QADF,EAEEU,OAFF,EAGEC,cAHF,EAIElD,KAJF,EAKEJ,OALF;QAAA;UAAA;YAAA;cAAA;gBAOEqD,OAAO,GAAGzD,YAAY,CAACyD,OAAD,CAAtB;gBACAC,cAAc,GAAG1D,YAAY,CAAC0D,cAAD,CAA7B;gBARF,mCASS,KAAKvD,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA,IACXK,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEoD,MADI;4BAAA;4BAAA;0BAAA;;0BAAA,MAER,IAAIC,KAAJ,CAAU,eAAV,CAFQ;;wBAAA;0BAIZC,UAJY,GAIoBtD,KAJpB;;0BAKhB,IAAIb,SAAS,CAACoE,WAAV,OAA4B,KAAhC,EAAuC;4BACrC;4BACAD,UAAU,GAAGlE,mBAAmB,CAACY,KAAD,CAAhC;0BACD;;0BARe;0BAAA,OASVV,WAAW,CAACkE,KAAZ,CAAiBd;4BACrBH,QAAQ,EAARA,QADqB;4BAErBU,OAAO,EAAPA,OAFqB;4BAGrBC,cAAc,EAAdA,cAHqB;4BAIrBlD,KAAK,EAAEsD;0BAJc,GAKlB1D,OALkB,CAAjB,CATU;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GATT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;6FA4BA,mBACE2C,QADF,EAEEU,OAFF,EAGEC,cAHF,EAIElD,KAJF,EAKEJ,OALF;QAAA;UAAA;YAAA;cAAA;gBAOEqD,OAAO,GAAGzD,YAAY,CAACyD,OAAD,CAAtB;gBACAC,cAAc,GAAG1D,YAAY,CAAC0D,cAAD,CAA7B;gBARF;gBAAA,OASQ,KAAKvD,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA,IACVK,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEoD,MADG;4BAAA;4BAAA;0BAAA;;0BAAA,MAEP,IAAIC,KAAJ,CAAU,eAAV,CAFO;;wBAAA;0BAIXC,UAJW,GAIqBtD,KAJrB;;0BAKf,IAAIb,SAAS,CAACoE,WAAV,OAA4B,KAAhC,EAAuC;4BACrC;4BACAD,UAAU,GAAGlE,mBAAmB,CAACY,KAAD,CAAhC;0BACD;;0BARc;0BAAA,OASTV,WAAW,CAACmE,oBAAZ,CAAgCf;4BACpCH,QAAQ,EAARA,QADoC;4BAEpCU,OAAO,EAAPA,OAFoC;4BAGpCC,cAAc,EAAdA,cAHoC;4BAIpClD,KAAK,EAAEsD;0BAJ6B,GAKjC1D,OALiC,CAAhC,CATS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GATR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;uFA4BA,mBACE2C,QADF,EAEEU,OAFF,EAGEC,cAHF,EAIEQ,UAJF,EAKE9D,OALF;QAAA;;QAAA;QAAA;UAAA;YAAA;cAAA;gBAOEqD,OAAO,GAAGzD,YAAY,CAACyD,OAAD,CAAtB;gBACAC,cAAc,GAAG1D,YAAY,CAAC0D,cAAD,CAA7B;gBACAQ,UAAU,GAAGlE,YAAY,CAACkE,UAAD,CAAzB;gBATF;gBAAA,OAUsB,KAAK/D,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA;0BAAA,OACRL,WAAW,CAACqE,cAAZ,CAA0BjB;4BAC7CH,QAAQ,EAARA,QAD6C;4BAE7CU,OAAO,EAAPA,OAF6C;4BAG7CC,cAAc,EAAdA,cAH6C;4BAI7CQ,UAAU,EAAVA;0BAJ6C,GAK1C9D,OAL0C,CAA1B,CADQ;;wBAAA;0BACvBG,MADuB;0BAAA,mCAQtB,MAAI,CAAC+B,YAAL,CAAkB/B,MAAM,CAACC,KAAzB,CARsB;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GAVtB;;cAAA;gBAUQA,KAVR;gBAAA,mCAoBSA,KApBT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;wFAuBA,mBACEuC,QADF,EAEEU,OAFF,EAGEC,cAHF,EAIEQ,UAJF,EAKE1D,KALF,EAMEJ,OANF;QAAA;UAAA;YAAA;cAAA;gBAQEqD,OAAO,GAAGzD,YAAY,CAACyD,OAAD,CAAtB;gBACAC,cAAc,GAAG1D,YAAY,CAAC0D,cAAD,CAA7B;gBACAQ,UAAU,GAAGlE,YAAY,CAACkE,UAAD,CAAzB;gBAVF,mCAWS,KAAK/D,KAAL,0EAAW;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BAAA,IACXK,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEoD,MADI;4BAAA;4BAAA;0BAAA;;0BAAA,MAER,IAAIC,KAAJ,CAAU,eAAV,CAFQ;;wBAAA;0BAIZC,UAJY,GAIoBtD,KAJpB;;0BAKhB,IAAIb,SAAS,CAACoE,WAAV,OAA4B,KAAhC,EAAuC;4BACrC;4BACAD,UAAU,GAAGlE,mBAAmB,CAACY,KAAD,CAAhC;0BACD;;0BARe;0BAAA,OASVV,WAAW,CAACsE,eAAZ,CAA2BlB;4BAC/BH,QAAQ,EAARA,QAD+B;4BAE/BU,OAAO,EAAPA,OAF+B;4BAG/BC,cAAc,EAAdA,cAH+B;4BAI/BQ,UAAU,EAAVA,UAJ+B;4BAK/B1D,KAAK,EAAEsD;0BALwB,GAM5B1D,OAN4B,CAA3B,CATU;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GAXT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;2FA+BA,mBACE2C,QADF,EAEEU,OAFF,EAGEC,cAHF,EAIE9C,QAJF;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAME6C,OAAO,GAAGzD,YAAY,CAACyD,OAAD,CAAtB;gBACAC,cAAc,GAAG1D,YAAY,CAAC0D,cAAD,CAA7B;gBAPF;gBAAA,OAQQ,KAAKvD,KAAL,0EAAW;kBAAA;;kBAAA;oBAAA;sBAAA;wBAAA;0BACTU,GADS,0BACakC,QADb,cACyBU,OADzB,cACoCC,cADpC;0BAAA;0BAAA,OAET,YAAI,CAAC5C,cAAL,CAAoBC,GAApB,CAAwBF,GAAxB,OAA4B,IAA5B,IAA4BG,aAA5B,GAA4B,MAA5B,GAA4BA,GAAEC,MAAF,EAFnB;;wBAAA;0BAAA;0BAAA,OAGQnB,WAAW,CAACoB,WAAZ,CAAwBL,GAAxB,EAA6B,UAACwD,KAAD,EAAsB;4BACxEzD,QAAQ,CAAC,MAAI,CAAC0B,YAAL,CAAkB+B,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAE7D,KAAzB,CAAD,CAAR;0BACD,CAFsB,CAHR;;wBAAA;0BAGTW,QAHS;;0BAMf,MAAI,CAACL,cAAL,CAAoBM,GAApB,CAAwBP,GAAxB,EAA6BM,QAA7B;;0BANe;0BAAA,OAOTrB,WAAW,CAACwE,kBAAZ,CAA+B;4BACnCvB,QAAQ,EAARA,QADmC;4BAEnCU,OAAO,EAAPA,OAFmC;4BAGnCC,cAAc,EAAdA;0BAHmC,CAA/B,CAPS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GARR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;0FAuBA,mBAAwBX,QAAxB,EAA0CU,OAA1C,EAA2DC,cAA3D;QAAA;;QAAA;UAAA;YAAA;cAAA;gBACED,OAAO,GAAGzD,YAAY,CAACyD,OAAD,CAAtB;gBACAC,cAAc,GAAG1D,YAAY,CAAC0D,cAAD,CAA7B;gBAFF;gBAAA,OAGQ,KAAKvD,KAAL,0EAAW;kBAAA;;kBAAA;oBAAA;sBAAA;wBAAA;0BACTU,GADS,0BACakC,QADb,cACyBU,OADzB,cACoCC,cADpC;0BAAA;0BAAA,OAET,YAAI,CAAC5C,cAAL,CAAoBC,GAApB,CAAwBF,GAAxB,OAA4B,IAA5B,IAA4BG,aAA5B,GAA4B,MAA5B,GAA4BA,GAAEC,MAAF,EAFnB;;wBAAA;0BAGf,MAAI,CAACH,cAAL,CAAoBQ,MAApB,CAA2BT,GAA3B;;0BAHe;0BAAA,OAITf,WAAW,CAACyE,iBAAZ,CAA8B;4BAClCxB,QAAQ,EAARA,QADkC;4BAElCU,OAAO,EAAPA,OAFkC;4BAGlCC,cAAc,EAAdA;0BAHkC,CAA9B,CAJS;;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAAX,GAHR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAeQ,sBAAalD,KAAb,EAAyB;MAC/B,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;QAC7B,OAAOX,mBAAmB,CAACW,KAAD,CAA1B;MACD,CAFD,MAEO,IAAIA,KAAK,KAAK+B,SAAd,EAAyB;QAC9B,OAAO,IAAIiC,QAAJ,CAAa,IAAIC,WAAJ,CAAgB,CAAhB,CAAb,CAAP;MACD;;MACD,OAAOjE,KAAP;IACD;;;WAEO,uBAAckE,GAAd,EAA2C;MACjD,IAAIA,GAAG,KAAKnC,SAAZ,EAAuB;QACrB,OAAOA,SAAP;MACD;;MACD,IAAMhC,MAAM,GAAgC,EAA5C;;MACA,gCAAkB2C,MAAM,CAACyB,IAAP,CAAYD,GAAZ,CAAlB,kCAAoC;QAA/B,IAAM7D,GAAG,mBAAT;QACHN,MAAM,CAACM,GAAD,CAAN,GAAc,KAAKyB,YAAL,CAAkBoC,GAAG,CAAC7D,GAAD,CAArB,CAAd;MACD;;MACD,OAAON,MAAP;IACD;;;;;;AAGH,OAAO,IAAMqE,SAAS,GAAG,IAAI3E,cAAJ,EAAlB","names":["Capacitor","dataViewToHexString","hexStringToDataView","BluetoothLe","getQueue","validateUUID","BleClientClass","Map","queue","options","initialize","isEnabled","result","value","enabled","enable","disable","callback","key","eventListeners","get","_a","remove","addListener","listener","set","startEnabledNotifications","delete","stopEnabledNotifications","isLocationEnabled","openLocationSettings","openBluetoothSettings","openAppSettings","displayStrings","setDisplayStrings","requestDevice","device","scanListener","resultInternal","manufacturerData","convertObject","serviceData","rawAdvertisement","convertValue","undefined","requestLEScan","stopLEScan","deviceIds","getDevices","devices","services","getConnectedDevices","deviceId","onDisconnect","connect","Object","createBond","isBonded","disconnect","getServices","readRssi","parseFloat","service","characteristic","read","buffer","Error","writeValue","getPlatform","write","writeWithoutResponse","descriptor","readDescriptor","writeDescriptor","event","startNotifications","stopNotifications","DataView","ArrayBuffer","obj","keys","BleClient"],"sources":["/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@capacitor-community/bluetooth-le/src/bleClient.ts"],"sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\nimport { Capacitor } from '@capacitor/core';\n\nimport type { DisplayStrings } from './config';\nimport { dataViewToHexString, hexStringToDataView } from './conversion';\nimport type {\n  BleDevice,\n  BleService,\n  Data,\n  InitializeOptions,\n  ReadResult,\n  RequestBleDeviceOptions,\n  ScanResult,\n  ScanResultInternal,\n  TimeoutOptions,\n} from './definitions';\nimport { BluetoothLe } from './plugin';\nimport { getQueue } from './queue';\nimport { validateUUID } from './validators';\n\nexport interface BleClientInterface {\n  /**\n   * Initialize Bluetooth Low Energy (BLE). If it fails, BLE might be unavailable on this device.\n   * On **Android** it will ask for the location permission. On **iOS** it will ask for the Bluetooth permission.\n   * For an example, see [usage](#usage).\n   */\n  initialize(options?: InitializeOptions): Promise<void>;\n\n  /**\n   * Reports whether Bluetooth is enabled on this device.\n   * Always returns `true` on **web**.\n   */\n  isEnabled(): Promise<boolean>;\n\n  /**\n   * Enable Bluetooth.\n   * Only available on **Android**.\n   */\n  enable(): Promise<void>;\n\n  /**\n   * Disable Bluetooth.\n   * Only available on **Android**.\n   */\n  disable(): Promise<void>;\n\n  /**\n   * Register a callback function that will be invoked when Bluetooth is enabled (true) or disabled (false) on this device.\n   * Not available on **web** (the callback will never be invoked).\n   * @param callback Callback function to use when the Bluetooth state changes.\n   */\n  startEnabledNotifications(callback: (value: boolean) => void): Promise<void>;\n\n  /**\n   * Stop the enabled notifications registered with `startEnabledNotifications`.\n   */\n  stopEnabledNotifications(): Promise<void>;\n\n  /**\n   * Reports whether Location Services are enabled on this device.\n   * Only available on **Android**.\n   */\n  isLocationEnabled(): Promise<boolean>;\n\n  /**\n   * Open Location settings.\n   * Only available on **Android**.\n   */\n  openLocationSettings(): Promise<void>;\n\n  /**\n   * Open Bluetooth settings.\n   * Only available on **Android**.\n   */\n  openBluetoothSettings(): Promise<void>;\n\n  /**\n   * Open App settings.\n   * Not available on **web**.\n   * On **iOS** when a user declines the request to use Bluetooth on the first call of `initialize`, it is not possible\n   * to request for Bluetooth again from within the app. In this case Bluetooth has to be enabled in the app settings\n   * for the app to be able use it.\n   */\n  openAppSettings(): Promise<void>;\n\n  /**\n   * Set the strings that are displayed in the `requestDevice` dialog.\n   * @param displayStrings\n   */\n  setDisplayStrings(displayStrings: DisplayStrings): Promise<void>;\n\n  /**\n   * Request a peripheral BLE device to interact with. This will scan for available devices according to the filters in the options and show a dialog to pick a device.\n   * For an example, see [usage](#usage).\n   * @param options Device filters, see [RequestBleDeviceOptions](#RequestBleDeviceOptions)\n   */\n  requestDevice(options?: RequestBleDeviceOptions): Promise<BleDevice>;\n\n  /**\n   * Start scanning for BLE devices to interact with according to the filters in the options. The callback will be invoked on each device that is found.\n   * Scanning will continue until `stopLEScan` is called. For an example, see [usage](#usage).\n   * **NOTE**: Use with care on **web** platform, the required API is still behind a flag in most browsers.\n   * @param options\n   * @param callback\n   */\n  requestLEScan(options: RequestBleDeviceOptions, callback: (result: ScanResult) => void): Promise<void>;\n\n  /**\n   * Stop scanning for BLE devices. For an example, see [usage](#usage).\n   */\n  stopLEScan(): Promise<void>;\n\n  /**\n   * On iOS and web, if you want to connect to a previously connected device without scanning first, you can use `getDevice`.\n   * Uses [retrievePeripherals](https://developer.apple.com/documentation/corebluetooth/cbcentralmanager/1519127-retrieveperipherals) on iOS and\n   * [getDevices](https://developer.mozilla.org/en-US/docs/Web/API/Bluetooth/getDevices) on web.\n   * On Android, you can directly connect to the device with the deviceId.\n   * @param deviceIds List of device IDs, e.g. saved from a previous app run. No used on web.\n   */\n  getDevices(deviceIds: string[]): Promise<BleDevice[]>;\n\n  /**\n   * Get a list of currently connected devices.\n   * Uses [retrieveConnectedPeripherals](https://developer.apple.com/documentation/corebluetooth/cbcentralmanager/1518924-retrieveconnectedperipherals) on iOS,\n   * [getConnectedDevices](https://developer.android.com/reference/android/bluetooth/BluetoothManager#getConnectedDevices(int)) on Android\n   * and [getDevices](https://developer.mozilla.org/en-US/docs/Web/API/Bluetooth/getDevices) on web.\n   * @param services List of services to filter the devices by. If no service is specified, no devices will be returned. Only applies to iOS.\n   */\n  getConnectedDevices(services: string[]): Promise<BleDevice[]>;\n\n  /**\n   * Connect to a peripheral BLE device. For an example, see [usage](#usage).\n   * @param deviceId  The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   * @param onDisconnect Optional disconnect callback function that will be used when the device disconnects\n   * @param options Options for plugin call\n   */\n  connect(deviceId: string, onDisconnect?: (deviceId: string) => void, options?: TimeoutOptions): Promise<void>;\n\n  /**\n   * Create a bond with a peripheral BLE device.\n   * Only available on **Android**. On iOS bonding is handled by the OS.\n   * @param deviceId  The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   */\n  createBond(deviceId: string): Promise<void>;\n\n  /**\n   * Report whether a peripheral BLE device is bonded.\n   * Only available on **Android**. On iOS bonding is handled by the OS.\n   * @param deviceId  The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   */\n  isBonded(deviceId: string): Promise<boolean>;\n\n  /**\n   * Disconnect from a peripheral BLE device. For an example, see [usage](#usage).\n   * @param deviceId  The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   */\n  disconnect(deviceId: string): Promise<void>;\n\n  /**\n   * Get services, characteristics and descriptors of a device.\n   * @param deviceId  The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   */\n  getServices(deviceId: string): Promise<BleService[]>;\n\n  /**\n   * Read the RSSI value of a connected device.\n   * Not available on web.\n   * @param deviceId The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   */\n  readRssi(deviceId: string): Promise<number>;\n\n  /**\n   * Read the value of a characteristic. For an example, see [usage](#usage).\n   * @param deviceId The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   * @param service UUID of the service (see [UUID format](#uuid-format))\n   * @param characteristic UUID of the characteristic (see [UUID format](#uuid-format))\n   * @param options Options for plugin call\n   */\n  read(deviceId: string, service: string, characteristic: string, options?: TimeoutOptions): Promise<DataView>;\n\n  /**\n   * Write a value to a characteristic. For an example, see [usage](#usage).\n   * @param deviceId The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   * @param service UUID of the service (see [UUID format](#uuid-format))\n   * @param characteristic UUID of the characteristic (see [UUID format](#uuid-format))\n   * @param value The value to write as a DataView. To create a DataView from an array of numbers, there is a helper function, e.g. numbersToDataView([1, 0])\n   * @param options Options for plugin call\n   */\n  write(\n    deviceId: string,\n    service: string,\n    characteristic: string,\n    value: DataView,\n    options?: TimeoutOptions\n  ): Promise<void>;\n\n  /**\n   * Write a value to a characteristic without waiting for a response.\n   * @param deviceId The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   * @param service UUID of the service (see [UUID format](#uuid-format))\n   * @param characteristic UUID of the characteristic (see [UUID format](#uuid-format))\n   * @param value The value to write as a DataView. To create a DataView from an array of numbers, there is a helper function, e.g. numbersToDataView([1, 0])\n   * @param options Options for plugin call\n   */\n  writeWithoutResponse(\n    deviceId: string,\n    service: string,\n    characteristic: string,\n    value: DataView,\n    options?: TimeoutOptions\n  ): Promise<void>;\n\n  /**\n   * Read the value of a descriptor.\n   * @param deviceId The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   * @param service UUID of the service (see [UUID format](#uuid-format))\n   * @param characteristic UUID of the characteristic (see [UUID format](#uuid-format))\n   * @param descriptor UUID of the descriptor (see [UUID format](#uuid-format))\n   * @param options Options for plugin call\n   */\n  readDescriptor(\n    deviceId: string,\n    service: string,\n    characteristic: string,\n    descriptor: string,\n    options?: TimeoutOptions\n  ): Promise<DataView>;\n\n  /**\n   * Write a value to a descriptor.\n   * @param deviceId The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   * @param service UUID of the service (see [UUID format](#uuid-format))\n   * @param characteristic UUID of the characteristic (see [UUID format](#uuid-format))\n   * @param descriptor UUID of the descriptor (see [UUID format](#uuid-format))\n   * @param value The value to write as a DataView. To create a DataView from an array of numbers, there is a helper function, e.g. numbersToDataView([1, 0])\n   * @param options Options for plugin call\n   */\n  writeDescriptor(\n    deviceId: string,\n    service: string,\n    characteristic: string,\n    descriptor: string,\n    value: DataView,\n    options?: TimeoutOptions\n  ): Promise<void>;\n\n  /**\n   * Start listening to changes of the value of a characteristic.\n   * Note that you should only start the notifications once per characteristic in your app and share the data and\n   * not call `startNotifications` in every component that needs the data.\n   * For an example, see [usage](#usage).\n   * @param deviceId The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   * @param service UUID of the service (see [UUID format](#uuid-format))\n   * @param characteristic UUID of the characteristic (see [UUID format](#uuid-format))\n   * @param callback Callback function to use when the value of the characteristic changes\n   */\n  startNotifications(\n    deviceId: string,\n    service: string,\n    characteristic: string,\n    callback: (value: DataView) => void\n  ): Promise<void>;\n\n  /**\n   * Stop listening to the changes of the value of a characteristic. For an example, see [usage](#usage).\n   * @param deviceId The ID of the device to use (obtained from [requestDevice](#requestDevice) or [requestLEScan](#requestLEScan))\n   * @param service UUID of the service (see [UUID format](#uuid-format))\n   * @param characteristic UUID of the characteristic (see [UUID format](#uuid-format))\n   */\n  stopNotifications(deviceId: string, service: string, characteristic: string): Promise<void>;\n}\n\nclass BleClientClass implements BleClientInterface {\n  private scanListener: PluginListenerHandle | null = null;\n  private eventListeners = new Map<string, PluginListenerHandle>();\n  private queue = getQueue(true);\n\n  enableQueue() {\n    this.queue = getQueue(true);\n  }\n\n  disableQueue() {\n    this.queue = getQueue(false);\n  }\n\n  async initialize(options?: InitializeOptions): Promise<void> {\n    await this.queue(async () => {\n      await BluetoothLe.initialize(options);\n    });\n  }\n\n  /**\n   * Reports whether BLE is enabled on this device.\n   * Always returns `true` on **web**.\n   * @deprecated Use `isEnabled` instead.\n   */\n  async getEnabled(): Promise<boolean> {\n    return this.isEnabled();\n  }\n\n  async isEnabled(): Promise<boolean> {\n    const enabled = await this.queue(async () => {\n      const result = await BluetoothLe.isEnabled();\n      return result.value;\n    });\n    return enabled;\n  }\n\n  async enable(): Promise<void> {\n    await this.queue(async () => {\n      await BluetoothLe.enable();\n    });\n  }\n\n  async disable(): Promise<void> {\n    await this.queue(async () => {\n      await BluetoothLe.disable();\n    });\n  }\n\n  async startEnabledNotifications(callback: (value: boolean) => void): Promise<void> {\n    await this.queue(async () => {\n      const key = `onEnabledChanged`;\n      await this.eventListeners.get(key)?.remove();\n      const listener = await BluetoothLe.addListener(key, (result) => {\n        callback(result.value);\n      });\n      this.eventListeners.set(key, listener);\n      await BluetoothLe.startEnabledNotifications();\n    });\n  }\n\n  async stopEnabledNotifications(): Promise<void> {\n    await this.queue(async () => {\n      const key = `onEnabledChanged`;\n      await this.eventListeners.get(key)?.remove();\n      this.eventListeners.delete(key);\n      await BluetoothLe.stopEnabledNotifications();\n    });\n  }\n\n  async isLocationEnabled(): Promise<boolean> {\n    const enabled = await this.queue(async () => {\n      const result = await BluetoothLe.isLocationEnabled();\n      return result.value;\n    });\n    return enabled;\n  }\n\n  async openLocationSettings(): Promise<void> {\n    await this.queue(async () => {\n      await BluetoothLe.openLocationSettings();\n    });\n  }\n\n  async openBluetoothSettings(): Promise<void> {\n    await this.queue(async () => {\n      await BluetoothLe.openBluetoothSettings();\n    });\n  }\n\n  async openAppSettings(): Promise<void> {\n    await this.queue(async () => {\n      await BluetoothLe.openAppSettings();\n    });\n  }\n\n  async setDisplayStrings(displayStrings: DisplayStrings): Promise<void> {\n    await this.queue(async () => {\n      await BluetoothLe.setDisplayStrings(displayStrings);\n    });\n  }\n\n  async requestDevice(options?: RequestBleDeviceOptions): Promise<BleDevice> {\n    const result = await this.queue(async () => {\n      const device = await BluetoothLe.requestDevice(options);\n      return device;\n    });\n    return result;\n  }\n\n  async requestLEScan(options: RequestBleDeviceOptions, callback: (result: ScanResult) => void): Promise<void> {\n    await this.queue(async () => {\n      await this.scanListener?.remove();\n      this.scanListener = await BluetoothLe.addListener('onScanResult', (resultInternal: ScanResultInternal) => {\n        const result: ScanResult = {\n          ...resultInternal,\n          manufacturerData: this.convertObject(resultInternal.manufacturerData),\n          serviceData: this.convertObject(resultInternal.serviceData),\n          rawAdvertisement: resultInternal.rawAdvertisement\n            ? this.convertValue(resultInternal.rawAdvertisement)\n            : undefined,\n        };\n        callback(result);\n      });\n      await BluetoothLe.requestLEScan(options);\n    });\n  }\n\n  async stopLEScan(): Promise<void> {\n    await this.queue(async () => {\n      await this.scanListener?.remove();\n      this.scanListener = null;\n      await BluetoothLe.stopLEScan();\n    });\n  }\n\n  async getDevices(deviceIds: string[]): Promise<BleDevice[]> {\n    return this.queue(async () => {\n      const result = await BluetoothLe.getDevices({ deviceIds });\n      return result.devices;\n    });\n  }\n\n  async getConnectedDevices(services: string[]): Promise<BleDevice[]> {\n    return this.queue(async () => {\n      const result = await BluetoothLe.getConnectedDevices({ services });\n      return result.devices;\n    });\n  }\n\n  async connect(deviceId: string, onDisconnect?: (deviceId: string) => void, options?: TimeoutOptions): Promise<void> {\n    await this.queue(async () => {\n      if (onDisconnect) {\n        const key = `disconnected|${deviceId}`;\n        await this.eventListeners.get(key)?.remove();\n        const listener = await BluetoothLe.addListener(key, () => {\n          onDisconnect(deviceId);\n        });\n        this.eventListeners.set(key, listener);\n      }\n      await BluetoothLe.connect({ deviceId, ...options });\n    });\n  }\n\n  async createBond(deviceId: string): Promise<void> {\n    await this.queue(async () => {\n      await BluetoothLe.createBond({ deviceId });\n    });\n  }\n\n  async isBonded(deviceId: string): Promise<boolean> {\n    const isBonded = await this.queue(async () => {\n      const result = await BluetoothLe.isBonded({ deviceId });\n      return result.value;\n    });\n    return isBonded;\n  }\n\n  async disconnect(deviceId: string): Promise<void> {\n    await this.queue(async () => {\n      await BluetoothLe.disconnect({ deviceId });\n    });\n  }\n\n  async getServices(deviceId: string): Promise<BleService[]> {\n    const services = await this.queue(async () => {\n      const result = await BluetoothLe.getServices({ deviceId });\n      return result.services;\n    });\n    return services;\n  }\n\n  async readRssi(deviceId: string): Promise<number> {\n    const value = await this.queue(async () => {\n      const result = await BluetoothLe.readRssi({ deviceId });\n      return parseFloat(result.value);\n    });\n    return value;\n  }\n\n  async read(deviceId: string, service: string, characteristic: string, options?: TimeoutOptions): Promise<DataView> {\n    service = validateUUID(service);\n    characteristic = validateUUID(characteristic);\n    const value = await this.queue(async () => {\n      const result = await BluetoothLe.read({\n        deviceId,\n        service,\n        characteristic,\n        ...options,\n      });\n      return this.convertValue(result.value);\n    });\n    return value;\n  }\n\n  async write(\n    deviceId: string,\n    service: string,\n    characteristic: string,\n    value: DataView,\n    options?: TimeoutOptions\n  ): Promise<void> {\n    service = validateUUID(service);\n    characteristic = validateUUID(characteristic);\n    return this.queue(async () => {\n      if (!value?.buffer) {\n        throw new Error('Invalid data.');\n      }\n      let writeValue: DataView | string = value;\n      if (Capacitor.getPlatform() !== 'web') {\n        // on native we can only write strings\n        writeValue = dataViewToHexString(value);\n      }\n      await BluetoothLe.write({\n        deviceId,\n        service,\n        characteristic,\n        value: writeValue,\n        ...options,\n      });\n    });\n  }\n\n  async writeWithoutResponse(\n    deviceId: string,\n    service: string,\n    characteristic: string,\n    value: DataView,\n    options?: TimeoutOptions\n  ): Promise<void> {\n    service = validateUUID(service);\n    characteristic = validateUUID(characteristic);\n    await this.queue(async () => {\n      if (!value?.buffer) {\n        throw new Error('Invalid data.');\n      }\n      let writeValue: DataView | string = value;\n      if (Capacitor.getPlatform() !== 'web') {\n        // on native we can only write strings\n        writeValue = dataViewToHexString(value);\n      }\n      await BluetoothLe.writeWithoutResponse({\n        deviceId,\n        service,\n        characteristic,\n        value: writeValue,\n        ...options,\n      });\n    });\n  }\n\n  async readDescriptor(\n    deviceId: string,\n    service: string,\n    characteristic: string,\n    descriptor: string,\n    options?: TimeoutOptions\n  ): Promise<DataView> {\n    service = validateUUID(service);\n    characteristic = validateUUID(characteristic);\n    descriptor = validateUUID(descriptor);\n    const value = await this.queue(async () => {\n      const result = await BluetoothLe.readDescriptor({\n        deviceId,\n        service,\n        characteristic,\n        descriptor,\n        ...options,\n      });\n      return this.convertValue(result.value);\n    });\n    return value;\n  }\n\n  async writeDescriptor(\n    deviceId: string,\n    service: string,\n    characteristic: string,\n    descriptor: string,\n    value: DataView,\n    options?: TimeoutOptions\n  ): Promise<void> {\n    service = validateUUID(service);\n    characteristic = validateUUID(characteristic);\n    descriptor = validateUUID(descriptor);\n    return this.queue(async () => {\n      if (!value?.buffer) {\n        throw new Error('Invalid data.');\n      }\n      let writeValue: DataView | string = value;\n      if (Capacitor.getPlatform() !== 'web') {\n        // on native we can only write strings\n        writeValue = dataViewToHexString(value);\n      }\n      await BluetoothLe.writeDescriptor({\n        deviceId,\n        service,\n        characteristic,\n        descriptor,\n        value: writeValue,\n        ...options,\n      });\n    });\n  }\n\n  async startNotifications(\n    deviceId: string,\n    service: string,\n    characteristic: string,\n    callback: (value: DataView) => void\n  ): Promise<void> {\n    service = validateUUID(service);\n    characteristic = validateUUID(characteristic);\n    await this.queue(async () => {\n      const key = `notification|${deviceId}|${service}|${characteristic}`;\n      await this.eventListeners.get(key)?.remove();\n      const listener = await BluetoothLe.addListener(key, (event: ReadResult) => {\n        callback(this.convertValue(event?.value));\n      });\n      this.eventListeners.set(key, listener);\n      await BluetoothLe.startNotifications({\n        deviceId,\n        service,\n        characteristic,\n      });\n    });\n  }\n\n  async stopNotifications(deviceId: string, service: string, characteristic: string): Promise<void> {\n    service = validateUUID(service);\n    characteristic = validateUUID(characteristic);\n    await this.queue(async () => {\n      const key = `notification|${deviceId}|${service}|${characteristic}`;\n      await this.eventListeners.get(key)?.remove();\n      this.eventListeners.delete(key);\n      await BluetoothLe.stopNotifications({\n        deviceId,\n        service,\n        characteristic,\n      });\n    });\n  }\n\n  private convertValue(value?: Data): DataView {\n    if (typeof value === 'string') {\n      return hexStringToDataView(value);\n    } else if (value === undefined) {\n      return new DataView(new ArrayBuffer(0));\n    }\n    return value;\n  }\n\n  private convertObject(obj?: { [key: string]: Data }): { [key: string]: DataView } | undefined {\n    if (obj === undefined) {\n      return undefined;\n    }\n    const result: { [key: string]: DataView } = {};\n    for (const key of Object.keys(obj)) {\n      result[key] = this.convertValue(obj[key]);\n    }\n    return result;\n  }\n}\n\nexport const BleClient = new BleClientClass();\n"]},"metadata":{},"sourceType":"module"}