{"ast":null,"code":"export function validateUUID(uuid) {\n  if (typeof uuid !== 'string') {\n    throw new Error(\"Invalid UUID type \".concat(typeof uuid, \". Expected string.\"));\n  }\n\n  uuid = uuid.toLowerCase();\n  var is128BitUuid = uuid.search(/^[0-9a-f]{8}\\b-[0-9a-f]{4}\\b-[0-9a-f]{4}\\b-[0-9a-f]{4}\\b-[0-9a-f]{12}$/) >= 0;\n\n  if (!is128BitUuid) {\n    throw new Error(\"Invalid UUID format \".concat(uuid, \". Expected 128 bit string (e.g. \\\"0000180d-0000-1000-8000-00805f9b34fb\\\").\"));\n  }\n\n  return uuid;\n}","map":{"version":3,"mappings":"AAAA,OAAM,SAAUA,YAAV,CAAuBC,IAAvB,EAAgC;EACpC,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;IAC5B,MAAM,IAAIC,KAAJ,6BAA+B,OAAOD,IAAtC,wBAAN;EACD;;EACDA,IAAI,GAAGA,IAAI,CAACE,WAAL,EAAP;EACA,IAAMC,YAAY,GAAGH,IAAI,CAACI,MAAL,CAAY,wEAAZ,KAAyF,CAA9G;;EACA,IAAI,CAACD,YAAL,EAAmB;IACjB,MAAM,IAAIF,KAAJ,+BACmBD,IADnB,gFAAN;EAGD;;EACD,OAAOA,IAAP;AACD","names":["validateUUID","uuid","Error","toLowerCase","is128BitUuid","search"],"sources":["/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@capacitor-community/bluetooth-le/src/validators.ts"],"sourcesContent":["export function validateUUID(uuid: any): string {\n  if (typeof uuid !== 'string') {\n    throw new Error(`Invalid UUID type ${typeof uuid}. Expected string.`);\n  }\n  uuid = uuid.toLowerCase();\n  const is128BitUuid = uuid.search(/^[0-9a-f]{8}\\b-[0-9a-f]{4}\\b-[0-9a-f]{4}\\b-[0-9a-f]{4}\\b-[0-9a-f]{12}$/) >= 0;\n  if (!is128BitUuid) {\n    throw new Error(\n      `Invalid UUID format ${uuid}. Expected 128 bit string (e.g. \"0000180d-0000-1000-8000-00805f9b34fb\").`\n    );\n  }\n  return uuid;\n}\n"]},"metadata":{},"sourceType":"module"}