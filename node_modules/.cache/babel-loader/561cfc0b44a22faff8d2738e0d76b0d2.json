{"ast":null,"code":"import { WebPlugin } from '@capacitor/core';\nexport class DeviceWeb extends WebPlugin {\n  async getId() {\n    return {\n      uuid: this.getUid()\n    };\n  }\n\n  async getInfo() {\n    if (typeof navigator === 'undefined' || !navigator.userAgent) {\n      throw this.unavailable('Device API not available in this browser');\n    }\n\n    const ua = navigator.userAgent;\n    const uaFields = this.parseUa(ua);\n    return {\n      model: uaFields.model,\n      platform: 'web',\n      operatingSystem: uaFields.operatingSystem,\n      osVersion: uaFields.osVersion,\n      manufacturer: navigator.vendor,\n      isVirtual: false,\n      webViewVersion: uaFields.browserVersion\n    };\n  }\n\n  async getBatteryInfo() {\n    if (typeof navigator === 'undefined' || !navigator.getBattery) {\n      throw this.unavailable('Device API not available in this browser');\n    }\n\n    let battery = {};\n\n    try {\n      battery = await navigator.getBattery();\n    } catch (e) {// Let it fail, we don't care\n    }\n\n    return {\n      batteryLevel: battery.level,\n      isCharging: battery.charging\n    };\n  }\n\n  async getLanguageCode() {\n    return {\n      value: navigator.language\n    };\n  }\n\n  parseUa(ua) {\n    const uaFields = {};\n    const start = ua.indexOf('(') + 1;\n    let end = ua.indexOf(') AppleWebKit');\n\n    if (ua.indexOf(') Gecko') !== -1) {\n      end = ua.indexOf(') Gecko');\n    }\n\n    const fields = ua.substring(start, end);\n\n    if (ua.indexOf('Android') !== -1) {\n      const tmpFields = fields.replace('; wv', '').split('; ').pop();\n\n      if (tmpFields) {\n        uaFields.model = tmpFields.split(' Build')[0];\n      }\n\n      uaFields.osVersion = fields.split('; ')[1];\n    } else {\n      uaFields.model = fields.split('; ')[0];\n\n      if (typeof navigator !== 'undefined' && navigator.oscpu) {\n        uaFields.osVersion = navigator.oscpu;\n      } else {\n        if (ua.indexOf('Windows') !== -1) {\n          uaFields.osVersion = fields;\n        } else {\n          const tmpFields = fields.split('; ').pop();\n\n          if (tmpFields) {\n            const lastParts = tmpFields.replace(' like Mac OS X', '').split(' ');\n            uaFields.osVersion = lastParts[lastParts.length - 1].replace(/_/g, '.');\n          }\n        }\n      }\n    }\n\n    if (/android/i.test(ua)) {\n      uaFields.operatingSystem = 'android';\n    } else if (/iPad|iPhone|iPod/.test(ua) && !window.MSStream) {\n      uaFields.operatingSystem = 'ios';\n    } else if (/Win/.test(ua)) {\n      uaFields.operatingSystem = 'windows';\n    } else if (/Mac/i.test(ua)) {\n      uaFields.operatingSystem = 'mac';\n    } else {\n      uaFields.operatingSystem = 'unknown';\n    } // Check for browsers based on non-standard javascript apis, only not user agent\n\n\n    const isFirefox = !!window.InstallTrigger;\n    const isSafari = !!window.ApplePaySession;\n    const isChrome = !!window.chrome;\n    const isEdge = /Edg/.test(ua);\n    const isFirefoxIOS = /FxiOS/.test(ua);\n    const isChromeIOS = /CriOS/.test(ua);\n    const isEdgeIOS = /EdgiOS/.test(ua); // FF and Edge User Agents both end with \"/MAJOR.MINOR\"\n\n    if (isSafari || isChrome && !isEdge || isFirefoxIOS || isChromeIOS || isEdgeIOS) {\n      // Safari version comes as     \"... Version/MAJOR.MINOR ...\"\n      // Chrome version comes as     \"... Chrome/MAJOR.MINOR ...\"\n      // FirefoxIOS version comes as \"... FxiOS/MAJOR.MINOR ...\"\n      // ChromeIOS version comes as  \"... CriOS/MAJOR.MINOR ...\"\n      let searchWord;\n\n      if (isFirefoxIOS) {\n        searchWord = 'FxiOS';\n      } else if (isChromeIOS) {\n        searchWord = 'CriOS';\n      } else if (isEdgeIOS) {\n        searchWord = 'EdgiOS';\n      } else if (isSafari) {\n        searchWord = 'Version';\n      } else {\n        searchWord = 'Chrome';\n      }\n\n      const words = ua.split(' ');\n\n      for (const word of words) {\n        if (word.includes(searchWord)) {\n          const version = word.split('/')[1];\n          uaFields.browserVersion = version;\n        }\n      }\n    } else if (isFirefox || isEdge) {\n      const reverseUA = ua.split('').reverse().join('');\n      const reverseVersion = reverseUA.split('/')[0];\n      const version = reverseVersion.split('').reverse().join('');\n      uaFields.browserVersion = version;\n    }\n\n    return uaFields;\n  }\n\n  getUid() {\n    if (typeof window !== 'undefined') {\n      let uid = window.localStorage.getItem('_capuid');\n\n      if (uid) {\n        return uid;\n      }\n\n      uid = this.uuid4();\n      window.localStorage.setItem('_capuid', uid);\n      return uid;\n    }\n\n    return this.uuid4();\n  }\n\n  uuid4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = Math.random() * 16 | 0,\n            v = c === 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n\n}","map":{"version":3,"mappings":"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","names":["WebPlugin","DeviceWeb","getId","uuid","getUid","getInfo","navigator","userAgent","unavailable","ua","uaFields","parseUa","model","platform","operatingSystem","osVersion","manufacturer","vendor","isVirtual","webViewVersion","browserVersion","getBatteryInfo","getBattery","battery","e","batteryLevel","level","isCharging","charging","getLanguageCode","value","language","start","indexOf","end","fields","substring","tmpFields","replace","split","pop","oscpu","lastParts","length","test","window","MSStream","isFirefox","InstallTrigger","isSafari","ApplePaySession","isChrome","chrome","isEdge","isFirefoxIOS","isChromeIOS","isEdgeIOS","searchWord","words","word","includes","version","reverseUA","reverse","join","reverseVersion","uid","localStorage","getItem","uuid4","setItem","c","r","Math","random","v","toString"],"sources":["/data/data/com.termux/files/home/Ionic/MyApp/node_modules/@capacitor/device/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  BatteryInfo,\n  DeviceId,\n  DeviceInfo,\n  DevicePlugin,\n  GetLanguageCodeResult,\n} from './definitions';\n\ndeclare global {\n  interface Navigator {\n    getBattery: any;\n    oscpu: any;\n  }\n\n  interface Window {\n    InstallTrigger?: any;\n    ApplePaySession?: any;\n    chrome?: any;\n  }\n}\n\nexport class DeviceWeb extends WebPlugin implements DevicePlugin {\n  async getId(): Promise<DeviceId> {\n    return {\n      uuid: this.getUid(),\n    };\n  }\n\n  async getInfo(): Promise<DeviceInfo> {\n    if (typeof navigator === 'undefined' || !navigator.userAgent) {\n      throw this.unavailable('Device API not available in this browser');\n    }\n\n    const ua = navigator.userAgent;\n    const uaFields = this.parseUa(ua);\n\n    return {\n      model: uaFields.model,\n      platform: <const>'web',\n      operatingSystem: uaFields.operatingSystem,\n      osVersion: uaFields.osVersion,\n      manufacturer: navigator.vendor,\n      isVirtual: false,\n      webViewVersion: uaFields.browserVersion,\n    };\n  }\n\n  async getBatteryInfo(): Promise<BatteryInfo> {\n    if (typeof navigator === 'undefined' || !navigator.getBattery) {\n      throw this.unavailable('Device API not available in this browser');\n    }\n    let battery: any = {};\n\n    try {\n      battery = await navigator.getBattery();\n    } catch (e) {\n      // Let it fail, we don't care\n    }\n\n    return {\n      batteryLevel: battery.level,\n      isCharging: battery.charging,\n    };\n  }\n\n  async getLanguageCode(): Promise<GetLanguageCodeResult> {\n    return {\n      value: navigator.language,\n    };\n  }\n\n  parseUa(ua: string): any {\n    const uaFields: any = {};\n    const start = ua.indexOf('(') + 1;\n    let end = ua.indexOf(') AppleWebKit');\n    if (ua.indexOf(') Gecko') !== -1) {\n      end = ua.indexOf(') Gecko');\n    }\n    const fields = ua.substring(start, end);\n    if (ua.indexOf('Android') !== -1) {\n      const tmpFields = fields.replace('; wv', '').split('; ').pop();\n      if (tmpFields) {\n        uaFields.model = tmpFields.split(' Build')[0];\n      }\n      uaFields.osVersion = fields.split('; ')[1];\n    } else {\n      uaFields.model = fields.split('; ')[0];\n      if (typeof navigator !== 'undefined' && navigator.oscpu) {\n        uaFields.osVersion = navigator.oscpu;\n      } else {\n        if (ua.indexOf('Windows') !== -1) {\n          uaFields.osVersion = fields;\n        } else {\n          const tmpFields = fields.split('; ').pop();\n          if (tmpFields) {\n            const lastParts = tmpFields\n              .replace(' like Mac OS X', '')\n              .split(' ');\n            uaFields.osVersion = lastParts[lastParts.length - 1].replace(\n              /_/g,\n              '.',\n            );\n          }\n        }\n      }\n    }\n\n    if (/android/i.test(ua)) {\n      uaFields.operatingSystem = 'android';\n    } else if (/iPad|iPhone|iPod/.test(ua) && !window.MSStream) {\n      uaFields.operatingSystem = 'ios';\n    } else if (/Win/.test(ua)) {\n      uaFields.operatingSystem = 'windows';\n    } else if (/Mac/i.test(ua)) {\n      uaFields.operatingSystem = 'mac';\n    } else {\n      uaFields.operatingSystem = 'unknown';\n    }\n\n    // Check for browsers based on non-standard javascript apis, only not user agent\n    const isFirefox = !!window.InstallTrigger;\n    const isSafari = !!window.ApplePaySession;\n    const isChrome = !!window.chrome;\n    const isEdge = /Edg/.test(ua);\n    const isFirefoxIOS = /FxiOS/.test(ua);\n    const isChromeIOS = /CriOS/.test(ua);\n    const isEdgeIOS = /EdgiOS/.test(ua);\n\n    // FF and Edge User Agents both end with \"/MAJOR.MINOR\"\n    if (\n      isSafari ||\n      (isChrome && !isEdge) ||\n      isFirefoxIOS ||\n      isChromeIOS ||\n      isEdgeIOS\n    ) {\n      // Safari version comes as     \"... Version/MAJOR.MINOR ...\"\n      // Chrome version comes as     \"... Chrome/MAJOR.MINOR ...\"\n      // FirefoxIOS version comes as \"... FxiOS/MAJOR.MINOR ...\"\n      // ChromeIOS version comes as  \"... CriOS/MAJOR.MINOR ...\"\n      let searchWord: string;\n      if (isFirefoxIOS) {\n        searchWord = 'FxiOS';\n      } else if (isChromeIOS) {\n        searchWord = 'CriOS';\n      } else if (isEdgeIOS) {\n        searchWord = 'EdgiOS';\n      } else if (isSafari) {\n        searchWord = 'Version';\n      } else {\n        searchWord = 'Chrome';\n      }\n\n      const words = ua.split(' ');\n      for (const word of words) {\n        if (word.includes(searchWord)) {\n          const version = word.split('/')[1];\n          uaFields.browserVersion = version;\n        }\n      }\n    } else if (isFirefox || isEdge) {\n      const reverseUA = ua.split('').reverse().join('');\n      const reverseVersion = reverseUA.split('/')[0];\n      const version = reverseVersion.split('').reverse().join('');\n      uaFields.browserVersion = version;\n    }\n\n    return uaFields;\n  }\n\n  getUid(): string {\n    if (typeof window !== 'undefined') {\n      let uid = window.localStorage.getItem('_capuid');\n      if (uid) {\n        return uid;\n      }\n\n      uid = this.uuid4();\n      window.localStorage.setItem('_capuid', uid);\n      return uid;\n    }\n    return this.uuid4();\n  }\n\n  uuid4(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n      /[xy]/g,\n      function (c) {\n        const r = (Math.random() * 16) | 0,\n          v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      },\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}