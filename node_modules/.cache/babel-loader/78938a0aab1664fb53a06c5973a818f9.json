{"ast":null,"code":"export var Style;\n\n(function (Style) {\n  /**\n   * Light text for dark backgrounds.\n   *\n   * @since 1.0.0\n   */\n  Style[\"Dark\"] = \"DARK\";\n  /**\n   * Dark text for light backgrounds.\n   *\n   * @since 1.0.0\n   */\n\n  Style[\"Light\"] = \"LIGHT\";\n  /**\n   * On iOS 13 and newer the style is based on the device appearance.\n   * If the device is using Dark mode, the statusbar text will be light.\n   * If the device is using Light mode, the statusbar text will be dark.\n   * On iOS 12 and older the statusbar text will be dark.\n   * On Android the default will be the one the app was launched with.\n   *\n   * @since 1.0.0\n   */\n\n  Style[\"Default\"] = \"DEFAULT\";\n})(Style || (Style = {}));\n\nexport var Animation;\n\n(function (Animation) {\n  /**\n   * No animation during show/hide.\n   *\n   * @since 1.0.0\n   */\n  Animation[\"None\"] = \"NONE\";\n  /**\n   * Slide animation during show/hide.\n   *\n   * @since 1.0.0\n   */\n\n  Animation[\"Slide\"] = \"SLIDE\";\n  /**\n   * Fade animation during show/hide.\n   *\n   * @since 1.0.0\n   */\n\n  Animation[\"Fade\"] = \"FADE\";\n})(Animation || (Animation = {}));\n/**\n * @deprecated Use `Animation`.\n * @since 1.0.0\n */\n\n\nexport const StatusBarAnimation = Animation;\n/**\n * @deprecated Use `Style`.\n * @since 1.0.0\n */\n\nexport const StatusBarStyle = Style;","map":{"version":3,"mappings":"AASA,WAAYA,KAAZ;;AAAA,WAAYA,KAAZ,EAAiB;EACf;;;;;EAKAA;EAEA;;;;;;EAKAA;EAEA;;;;;;;;;;EASAA;AACD,CAzBD,EAAYA,KAAK,KAALA,KAAK,MAAjB;;AAsCA,WAAYC,SAAZ;;AAAA,WAAYA,SAAZ,EAAqB;EACnB;;;;;EAKAA;EAEA;;;;;;EAKAA;EAEA;;;;;;EAKAA;AACD,CArBD,EAAYA,SAAS,KAATA,SAAS,MAArB;AA4JA;;;;;;AAIA,OAAO,MAAMC,kBAAkB,GAAGD,SAA3B;AAEP;;;;;AAIA,OAAO,MAAME,cAAc,GAAGH,KAAvB","names":["Style","Animation","StatusBarAnimation","StatusBarStyle"],"sources":["/data/data/com.termux/files/home/Ionic/ExploringApp/node_modules/@capacitor/status-bar/src/definitions.ts"],"sourcesContent":["export interface StyleOptions {\n  /**\n   * Style of the text of the status bar.\n   *\n   * @since 1.0.0\n   */\n  style: Style;\n}\n\nexport enum Style {\n  /**\n   * Light text for dark backgrounds.\n   *\n   * @since 1.0.0\n   */\n  Dark = 'DARK',\n\n  /**\n   * Dark text for light backgrounds.\n   *\n   * @since 1.0.0\n   */\n  Light = 'LIGHT',\n\n  /**\n   * On iOS 13 and newer the style is based on the device appearance.\n   * If the device is using Dark mode, the statusbar text will be light.\n   * If the device is using Light mode, the statusbar text will be dark.\n   * On iOS 12 and older the statusbar text will be dark.\n   * On Android the default will be the one the app was launched with.\n   *\n   * @since 1.0.0\n   */\n  Default = 'DEFAULT',\n}\n\nexport interface AnimationOptions {\n  /**\n   * The type of status bar animation used when showing or hiding.\n   *\n   * This option is only supported on iOS.\n   *\n   * @since 1.0.0\n   */\n  animation: Animation;\n}\n\nexport enum Animation {\n  /**\n   * No animation during show/hide.\n   *\n   * @since 1.0.0\n   */\n  None = 'NONE',\n\n  /**\n   * Slide animation during show/hide.\n   *\n   * @since 1.0.0\n   */\n  Slide = 'SLIDE',\n\n  /**\n   * Fade animation during show/hide.\n   *\n   * @since 1.0.0\n   */\n  Fade = 'FADE',\n}\n\nexport interface BackgroundColorOptions {\n  /**\n   * A hex color to which the status bar color is set.\n   *\n   * This option is only supported on Android.\n   *\n   * @since 1.0.0\n   */\n  color: string;\n}\n\nexport interface StatusBarInfo {\n  /**\n   * Whether the status bar is visible or not.\n   *\n   * @since 1.0.0\n   */\n  visible: boolean;\n\n  /**\n   * The current status bar style.\n   *\n   * @since 1.0.0\n   */\n  style: Style;\n\n  /**\n   * The current status bar color.\n   *\n   * This option is only supported on Android.\n   *\n   * @since 1.0.0\n   */\n  color?: string;\n\n  /**\n   * Whether the statusbar is overlaid or not.\n   *\n   * This option is only supported on Android.\n   *\n   * @since 1.0.0\n   */\n  overlays?: boolean;\n}\n\nexport interface SetOverlaysWebViewOptions {\n  /**\n   * Whether to overlay the status bar or not.\n   *\n   * @since 1.0.0\n   */\n  overlay: boolean;\n}\n\nexport interface StatusBarPlugin {\n  /**\n   * Set the current style of the status bar.\n   *\n   * @since 1.0.0\n   */\n  setStyle(options: StyleOptions): Promise<void>;\n\n  /**\n   * Set the background color of the status bar.\n   *\n   * This method is only supported on Android.\n   *\n   * @since 1.0.0\n   */\n  setBackgroundColor(options: BackgroundColorOptions): Promise<void>;\n\n  /**\n   * Show the status bar.\n   *\n   * @since 1.0.0\n   */\n  show(options?: AnimationOptions): Promise<void>;\n\n  /**\n   * Hide the status bar.\n   *\n   * @since 1.0.0\n   */\n  hide(options?: AnimationOptions): Promise<void>;\n\n  /**\n   * Get info about the current state of the status bar.\n   *\n   * @since 1.0.0\n   */\n  getInfo(): Promise<StatusBarInfo>;\n\n  /**\n   * Set whether or not the status bar should overlay the webview to allow usage\n   * of the space underneath it.\n   *\n   * This method is only supported on Android.\n   *\n   * @since 1.0.0\n   */\n  setOverlaysWebView(options: SetOverlaysWebViewOptions): Promise<void>;\n}\n\n/**\n * @deprecated Use `StyleOptions`.\n * @since 1.0.0\n */\nexport type StatusBarStyleOptions = StyleOptions;\n\n/**\n * @deprecated Use `BackgroundColorOptions`.\n * @since 1.0.0\n */\nexport type StatusBarBackgroundColorOptions = BackgroundColorOptions;\n\n/**\n * @deprecated Use `SetOverlaysWebViewOptions`.\n * @since 1.0.0\n */\nexport type StatusBarOverlaysWebviewOptions = SetOverlaysWebViewOptions;\n\n/**\n * @deprecated Use `StatusBarInfo`.\n * @since 1.0.0\n */\nexport type StatusBarInfoResult = StatusBarInfo;\n\n/**\n * @deprecated Use `AnimationOptions`.\n * @since 1.0.0\n */\nexport type StatusBarAnimationOptions = AnimationOptions;\n\n/**\n * @deprecated Use `Animation`.\n * @since 1.0.0\n */\nexport const StatusBarAnimation = Animation;\n\n/**\n * @deprecated Use `Style`.\n * @since 1.0.0\n */\nexport const StatusBarStyle = Style;\n"]},"metadata":{},"sourceType":"module"}